// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.Message.proto

#ifndef PROTOBUF_IM_2eMessage_2eproto__INCLUDED
#define PROTOBUF_IM_2eMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "IM.BaseDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace IM {
namespace Message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_IM_2eMessage_2eproto();
void protobuf_AssignDesc_IM_2eMessage_2eproto();
void protobuf_ShutdownFile_IM_2eMessage_2eproto();

class IMMsgData;
class IMMsgPlatFormTrans;
class IMMsgDataAck;
class IMMsgDataReadAck;
class IMMsgDataReadNotify;
class IMMsgJoinNotify;
class IMClientTimeReq;
class IMClientTimeRsp;
class IMUnreadMsgCntReq;
class IMUnreadMsgCntReqInner;
class IMUnreadMsgCntRsp;
class IMUnreadAndRecentSessionReq;
class IMUnreadAndRecentSessionReqInner;
class IMUnreadAndRecentSessionRsp;
class IMGetMsgListReq;
class IMGetMsgListRsp;
class IMGetLatestMsgIdReq;
class IMGetLatestMsgIdRsp;
class IMGetMsgByIdReq;
class IMGetMsgByIdRsp;
class IMGeekCtlInner;
class IMGeekControl;
class IMMsgDataPushNotify;
class IMMsgDataPushNotifyInner;

// ===================================================================

class IMMsgData : public ::google::protobuf::MessageLite {
 public:
  IMMsgData();
  virtual ~IMMsgData();

  IMMsgData(const IMMsgData& from);

  inline IMMsgData& operator=(const IMMsgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMMsgData& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMMsgData* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMMsgData* other);

  // implements Message ----------------------------------------------

  IMMsgData* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMMsgData& from);
  void MergeFrom(const IMMsgData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 from_user_id = 1;
  inline bool has_from_user_id() const;
  inline void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 from_user_id() const;
  inline void set_from_user_id(::google::protobuf::uint64 value);

  // required uint64 to_session_id = 2;
  inline bool has_to_session_id() const;
  inline void clear_to_session_id();
  static const int kToSessionIdFieldNumber = 2;
  inline ::google::protobuf::uint64 to_session_id() const;
  inline void set_to_session_id(::google::protobuf::uint64 value);

  // required uint32 msg_id = 3;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  inline ::google::protobuf::uint32 msg_id() const;
  inline void set_msg_id(::google::protobuf::uint32 value);

  // required uint32 create_time = 4;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 create_time() const;
  inline void set_create_time(::google::protobuf::uint32 value);

  // optional .IM.BaseDefine.MsgType msg_type = 5;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 5;
  inline ::IM::BaseDefine::MsgType msg_type() const;
  inline void set_msg_type(::IM::BaseDefine::MsgType value);

  // required bytes msg_data = 6;
  inline bool has_msg_data() const;
  inline void clear_msg_data();
  static const int kMsgDataFieldNumber = 6;
  inline const ::std::string& msg_data() const;
  inline void set_msg_data(const ::std::string& value);
  inline void set_msg_data(const char* value);
  inline void set_msg_data(const void* value, size_t size);
  inline ::std::string* mutable_msg_data();
  inline ::std::string* release_msg_data();
  inline void set_allocated_msg_data(::std::string* msg_data);

  // optional uint64 msg_item = 7;
  inline bool has_msg_item() const;
  inline void clear_msg_item();
  static const int kMsgItemFieldNumber = 7;
  inline ::google::protobuf::uint64 msg_item() const;
  inline void set_msg_item(::google::protobuf::uint64 value);

  // optional .IM.BaseDefine.SessionType session_type = 8;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 8;
  inline ::IM::BaseDefine::SessionType session_type() const;
  inline void set_session_type(::IM::BaseDefine::SessionType value);

  // optional uint32 app_id = 20;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 20;
  inline ::google::protobuf::uint32 app_id() const;
  inline void set_app_id(::google::protobuf::uint32 value);

  // optional uint32 domain_id = 21;
  inline bool has_domain_id() const;
  inline void clear_domain_id();
  static const int kDomainIdFieldNumber = 21;
  inline ::google::protobuf::uint32 domain_id() const;
  inline void set_domain_id(::google::protobuf::uint32 value);

  // optional bytes attach_data = 22;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 22;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // optional .IM.BaseDefine.ExtInfo ext_info = 23;
  inline bool has_ext_info() const;
  inline void clear_ext_info();
  static const int kExtInfoFieldNumber = 23;
  inline const ::IM::BaseDefine::ExtInfo& ext_info() const;
  inline ::IM::BaseDefine::ExtInfo* mutable_ext_info();
  inline ::IM::BaseDefine::ExtInfo* release_ext_info();
  inline void set_allocated_ext_info(::IM::BaseDefine::ExtInfo* ext_info);

  // @@protoc_insertion_point(class_scope:IM.Message.IMMsgData)
 private:
  inline void set_has_from_user_id();
  inline void clear_has_from_user_id();
  inline void set_has_to_session_id();
  inline void clear_has_to_session_id();
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_msg_data();
  inline void clear_has_msg_data();
  inline void set_has_msg_item();
  inline void clear_has_msg_item();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_app_id();
  inline void clear_has_app_id();
  inline void set_has_domain_id();
  inline void clear_has_domain_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();
  inline void set_has_ext_info();
  inline void clear_has_ext_info();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 from_user_id_;
  ::google::protobuf::uint64 to_session_id_;
  ::google::protobuf::uint32 msg_id_;
  ::google::protobuf::uint32 create_time_;
  ::std::string* msg_data_;
  int msg_type_;
  int session_type_;
  ::google::protobuf::uint64 msg_item_;
  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint32 domain_id_;
  ::std::string* attach_data_;
  ::IM::BaseDefine::ExtInfo* ext_info_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMMsgData* default_instance_;
};
// -------------------------------------------------------------------

class IMMsgPlatFormTrans : public ::google::protobuf::MessageLite {
 public:
  IMMsgPlatFormTrans();
  virtual ~IMMsgPlatFormTrans();

  IMMsgPlatFormTrans(const IMMsgPlatFormTrans& from);

  inline IMMsgPlatFormTrans& operator=(const IMMsgPlatFormTrans& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMMsgPlatFormTrans& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMMsgPlatFormTrans* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMMsgPlatFormTrans* other);

  // implements Message ----------------------------------------------

  IMMsgPlatFormTrans* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMMsgPlatFormTrans& from);
  void MergeFrom(const IMMsgPlatFormTrans& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .IM.Message.IMMsgData im_msg_data = 1;
  inline bool has_im_msg_data() const;
  inline void clear_im_msg_data();
  static const int kImMsgDataFieldNumber = 1;
  inline const ::IM::Message::IMMsgData& im_msg_data() const;
  inline ::IM::Message::IMMsgData* mutable_im_msg_data();
  inline ::IM::Message::IMMsgData* release_im_msg_data();
  inline void set_allocated_im_msg_data(::IM::Message::IMMsgData* im_msg_data);

  // optional bool copy_from = 2;
  inline bool has_copy_from() const;
  inline void clear_copy_from();
  static const int kCopyFromFieldNumber = 2;
  inline bool copy_from() const;
  inline void set_copy_from(bool value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMMsgPlatFormTrans)
 private:
  inline void set_has_im_msg_data();
  inline void clear_has_im_msg_data();
  inline void set_has_copy_from();
  inline void clear_has_copy_from();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::IM::Message::IMMsgData* im_msg_data_;
  bool copy_from_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMMsgPlatFormTrans* default_instance_;
};
// -------------------------------------------------------------------

class IMMsgDataAck : public ::google::protobuf::MessageLite {
 public:
  IMMsgDataAck();
  virtual ~IMMsgDataAck();

  IMMsgDataAck(const IMMsgDataAck& from);

  inline IMMsgDataAck& operator=(const IMMsgDataAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMMsgDataAck& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMMsgDataAck* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMMsgDataAck* other);

  // implements Message ----------------------------------------------

  IMMsgDataAck* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMMsgDataAck& from);
  void MergeFrom(const IMMsgDataAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 session_id = 2;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  inline ::google::protobuf::uint64 session_id() const;
  inline void set_session_id(::google::protobuf::uint64 value);

  // required uint32 msg_id = 3;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  inline ::google::protobuf::uint32 msg_id() const;
  inline void set_msg_id(::google::protobuf::uint32 value);

  // required .IM.BaseDefine.SessionType session_type = 4;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 4;
  inline ::IM::BaseDefine::SessionType session_type() const;
  inline void set_session_type(::IM::BaseDefine::SessionType value);

  // optional uint64 msg_item = 5;
  inline bool has_msg_item() const;
  inline void clear_msg_item();
  static const int kMsgItemFieldNumber = 5;
  inline ::google::protobuf::uint64 msg_item() const;
  inline void set_msg_item(::google::protobuf::uint64 value);

  // optional uint32 create_time = 6;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 create_time() const;
  inline void set_create_time(::google::protobuf::uint32 value);

  // optional .IM.BaseDefine.ExtInfo ext_info = 7;
  inline bool has_ext_info() const;
  inline void clear_ext_info();
  static const int kExtInfoFieldNumber = 7;
  inline const ::IM::BaseDefine::ExtInfo& ext_info() const;
  inline ::IM::BaseDefine::ExtInfo* mutable_ext_info();
  inline ::IM::BaseDefine::ExtInfo* release_ext_info();
  inline void set_allocated_ext_info(::IM::BaseDefine::ExtInfo* ext_info);

  // optional .IM.BaseDefine.MsgResCode res_code = 8;
  inline bool has_res_code() const;
  inline void clear_res_code();
  static const int kResCodeFieldNumber = 8;
  inline ::IM::BaseDefine::MsgResCode res_code() const;
  inline void set_res_code(::IM::BaseDefine::MsgResCode value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMMsgDataAck)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_msg_item();
  inline void clear_has_msg_item();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_ext_info();
  inline void clear_has_ext_info();
  inline void set_has_res_code();
  inline void clear_has_res_code();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 session_id_;
  ::google::protobuf::uint32 msg_id_;
  int session_type_;
  ::google::protobuf::uint64 msg_item_;
  ::IM::BaseDefine::ExtInfo* ext_info_;
  ::google::protobuf::uint32 create_time_;
  int res_code_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMMsgDataAck* default_instance_;
};
// -------------------------------------------------------------------

class IMMsgDataReadAck : public ::google::protobuf::MessageLite {
 public:
  IMMsgDataReadAck();
  virtual ~IMMsgDataReadAck();

  IMMsgDataReadAck(const IMMsgDataReadAck& from);

  inline IMMsgDataReadAck& operator=(const IMMsgDataReadAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMMsgDataReadAck& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMMsgDataReadAck* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMMsgDataReadAck* other);

  // implements Message ----------------------------------------------

  IMMsgDataReadAck* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMMsgDataReadAck& from);
  void MergeFrom(const IMMsgDataReadAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 session_id = 2;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  inline ::google::protobuf::uint64 session_id() const;
  inline void set_session_id(::google::protobuf::uint64 value);

  // required uint32 msg_id = 3;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  inline ::google::protobuf::uint32 msg_id() const;
  inline void set_msg_id(::google::protobuf::uint32 value);

  // required .IM.BaseDefine.SessionType session_type = 4;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 4;
  inline ::IM::BaseDefine::SessionType session_type() const;
  inline void set_session_type(::IM::BaseDefine::SessionType value);

  // optional uint64 msg_item = 5;
  inline bool has_msg_item() const;
  inline void clear_msg_item();
  static const int kMsgItemFieldNumber = 5;
  inline ::google::protobuf::uint64 msg_item() const;
  inline void set_msg_item(::google::protobuf::uint64 value);

  // optional .IM.BaseDefine.ExtInfo ext_info = 6;
  inline bool has_ext_info() const;
  inline void clear_ext_info();
  static const int kExtInfoFieldNumber = 6;
  inline const ::IM::BaseDefine::ExtInfo& ext_info() const;
  inline ::IM::BaseDefine::ExtInfo* mutable_ext_info();
  inline ::IM::BaseDefine::ExtInfo* release_ext_info();
  inline void set_allocated_ext_info(::IM::BaseDefine::ExtInfo* ext_info);

  // optional uint32 domain_id = 7 [default = 1000];
  inline bool has_domain_id() const;
  inline void clear_domain_id();
  static const int kDomainIdFieldNumber = 7;
  inline ::google::protobuf::uint32 domain_id() const;
  inline void set_domain_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMMsgDataReadAck)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_msg_item();
  inline void clear_has_msg_item();
  inline void set_has_ext_info();
  inline void clear_has_ext_info();
  inline void set_has_domain_id();
  inline void clear_has_domain_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 session_id_;
  ::google::protobuf::uint32 msg_id_;
  int session_type_;
  ::google::protobuf::uint64 msg_item_;
  ::IM::BaseDefine::ExtInfo* ext_info_;
  ::google::protobuf::uint32 domain_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMMsgDataReadAck* default_instance_;
};
// -------------------------------------------------------------------

class IMMsgDataReadNotify : public ::google::protobuf::MessageLite {
 public:
  IMMsgDataReadNotify();
  virtual ~IMMsgDataReadNotify();

  IMMsgDataReadNotify(const IMMsgDataReadNotify& from);

  inline IMMsgDataReadNotify& operator=(const IMMsgDataReadNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMMsgDataReadNotify& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMMsgDataReadNotify* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMMsgDataReadNotify* other);

  // implements Message ----------------------------------------------

  IMMsgDataReadNotify* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMMsgDataReadNotify& from);
  void MergeFrom(const IMMsgDataReadNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 session_id = 2;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  inline ::google::protobuf::uint64 session_id() const;
  inline void set_session_id(::google::protobuf::uint64 value);

  // required uint32 msg_id = 3;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  inline ::google::protobuf::uint32 msg_id() const;
  inline void set_msg_id(::google::protobuf::uint32 value);

  // required .IM.BaseDefine.SessionType session_type = 4;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 4;
  inline ::IM::BaseDefine::SessionType session_type() const;
  inline void set_session_type(::IM::BaseDefine::SessionType value);

  // optional uint64 msg_item = 5;
  inline bool has_msg_item() const;
  inline void clear_msg_item();
  static const int kMsgItemFieldNumber = 5;
  inline ::google::protobuf::uint64 msg_item() const;
  inline void set_msg_item(::google::protobuf::uint64 value);

  // optional .IM.BaseDefine.ExtInfo ext_info = 6;
  inline bool has_ext_info() const;
  inline void clear_ext_info();
  static const int kExtInfoFieldNumber = 6;
  inline const ::IM::BaseDefine::ExtInfo& ext_info() const;
  inline ::IM::BaseDefine::ExtInfo* mutable_ext_info();
  inline ::IM::BaseDefine::ExtInfo* release_ext_info();
  inline void set_allocated_ext_info(::IM::BaseDefine::ExtInfo* ext_info);

  // @@protoc_insertion_point(class_scope:IM.Message.IMMsgDataReadNotify)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_msg_item();
  inline void clear_has_msg_item();
  inline void set_has_ext_info();
  inline void clear_has_ext_info();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 session_id_;
  ::google::protobuf::uint32 msg_id_;
  int session_type_;
  ::google::protobuf::uint64 msg_item_;
  ::IM::BaseDefine::ExtInfo* ext_info_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMMsgDataReadNotify* default_instance_;
};
// -------------------------------------------------------------------

class IMMsgJoinNotify : public ::google::protobuf::MessageLite {
 public:
  IMMsgJoinNotify();
  virtual ~IMMsgJoinNotify();

  IMMsgJoinNotify(const IMMsgJoinNotify& from);

  inline IMMsgJoinNotify& operator=(const IMMsgJoinNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMMsgJoinNotify& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMMsgJoinNotify* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMMsgJoinNotify* other);

  // implements Message ----------------------------------------------

  IMMsgJoinNotify* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMMsgJoinNotify& from);
  void MergeFrom(const IMMsgJoinNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required .IM.BaseDefine.SessionType session_type = 2;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 2;
  inline ::IM::BaseDefine::SessionType session_type() const;
  inline void set_session_type(::IM::BaseDefine::SessionType value);

  // required uint32 app_id = 3;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 3;
  inline ::google::protobuf::uint32 app_id() const;
  inline void set_app_id(::google::protobuf::uint32 value);

  // optional uint32 domain_id = 4;
  inline bool has_domain_id() const;
  inline void clear_domain_id();
  static const int kDomainIdFieldNumber = 4;
  inline ::google::protobuf::uint32 domain_id() const;
  inline void set_domain_id(::google::protobuf::uint32 value);

  // optional uint64 session_id = 5;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 5;
  inline ::google::protobuf::uint64 session_id() const;
  inline void set_session_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMMsgJoinNotify)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_app_id();
  inline void clear_has_app_id();
  inline void set_has_domain_id();
  inline void clear_has_domain_id();
  inline void set_has_session_id();
  inline void clear_has_session_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  int session_type_;
  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint64 session_id_;
  ::google::protobuf::uint32 domain_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMMsgJoinNotify* default_instance_;
};
// -------------------------------------------------------------------

class IMClientTimeReq : public ::google::protobuf::MessageLite {
 public:
  IMClientTimeReq();
  virtual ~IMClientTimeReq();

  IMClientTimeReq(const IMClientTimeReq& from);

  inline IMClientTimeReq& operator=(const IMClientTimeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMClientTimeReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMClientTimeReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMClientTimeReq* other);

  // implements Message ----------------------------------------------

  IMClientTimeReq* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMClientTimeReq& from);
  void MergeFrom(const IMClientTimeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IM.Message.IMClientTimeReq)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMClientTimeReq* default_instance_;
};
// -------------------------------------------------------------------

class IMClientTimeRsp : public ::google::protobuf::MessageLite {
 public:
  IMClientTimeRsp();
  virtual ~IMClientTimeRsp();

  IMClientTimeRsp(const IMClientTimeRsp& from);

  inline IMClientTimeRsp& operator=(const IMClientTimeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMClientTimeRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMClientTimeRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMClientTimeRsp* other);

  // implements Message ----------------------------------------------

  IMClientTimeRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMClientTimeRsp& from);
  void MergeFrom(const IMClientTimeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 server_time = 1;
  inline bool has_server_time() const;
  inline void clear_server_time();
  static const int kServerTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 server_time() const;
  inline void set_server_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMClientTimeRsp)
 private:
  inline void set_has_server_time();
  inline void clear_has_server_time();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_time_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMClientTimeRsp* default_instance_;
};
// -------------------------------------------------------------------

class IMUnreadMsgCntReq : public ::google::protobuf::MessageLite {
 public:
  IMUnreadMsgCntReq();
  virtual ~IMUnreadMsgCntReq();

  IMUnreadMsgCntReq(const IMUnreadMsgCntReq& from);

  inline IMUnreadMsgCntReq& operator=(const IMUnreadMsgCntReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMUnreadMsgCntReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMUnreadMsgCntReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMUnreadMsgCntReq* other);

  // implements Message ----------------------------------------------

  IMUnreadMsgCntReq* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMUnreadMsgCntReq& from);
  void MergeFrom(const IMUnreadMsgCntReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // optional uint32 domain_id = 21 [default = 1000];
  inline bool has_domain_id() const;
  inline void clear_domain_id();
  static const int kDomainIdFieldNumber = 21;
  inline ::google::protobuf::uint32 domain_id() const;
  inline void set_domain_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMUnreadMsgCntReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();
  inline void set_has_domain_id();
  inline void clear_has_domain_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 domain_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMUnreadMsgCntReq* default_instance_;
};
// -------------------------------------------------------------------

class IMUnreadMsgCntReqInner : public ::google::protobuf::MessageLite {
 public:
  IMUnreadMsgCntReqInner();
  virtual ~IMUnreadMsgCntReqInner();

  IMUnreadMsgCntReqInner(const IMUnreadMsgCntReqInner& from);

  inline IMUnreadMsgCntReqInner& operator=(const IMUnreadMsgCntReqInner& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMUnreadMsgCntReqInner& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMUnreadMsgCntReqInner* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMUnreadMsgCntReqInner* other);

  // implements Message ----------------------------------------------

  IMUnreadMsgCntReqInner* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMUnreadMsgCntReqInner& from);
  void MergeFrom(const IMUnreadMsgCntReqInner& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 app_id = 1;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  inline ::google::protobuf::uint32 app_id() const;
  inline void set_app_id(::google::protobuf::uint32 value);

  // required .IM.Message.IMUnreadMsgCntReq unread_msgCntReq = 2;
  inline bool has_unread_msgcntreq() const;
  inline void clear_unread_msgcntreq();
  static const int kUnreadMsgCntReqFieldNumber = 2;
  inline const ::IM::Message::IMUnreadMsgCntReq& unread_msgcntreq() const;
  inline ::IM::Message::IMUnreadMsgCntReq* mutable_unread_msgcntreq();
  inline ::IM::Message::IMUnreadMsgCntReq* release_unread_msgcntreq();
  inline void set_allocated_unread_msgcntreq(::IM::Message::IMUnreadMsgCntReq* unread_msgcntreq);

  // @@protoc_insertion_point(class_scope:IM.Message.IMUnreadMsgCntReqInner)
 private:
  inline void set_has_app_id();
  inline void clear_has_app_id();
  inline void set_has_unread_msgcntreq();
  inline void clear_has_unread_msgcntreq();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::IM::Message::IMUnreadMsgCntReq* unread_msgcntreq_;
  ::google::protobuf::uint32 app_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMUnreadMsgCntReqInner* default_instance_;
};
// -------------------------------------------------------------------

class IMUnreadMsgCntRsp : public ::google::protobuf::MessageLite {
 public:
  IMUnreadMsgCntRsp();
  virtual ~IMUnreadMsgCntRsp();

  IMUnreadMsgCntRsp(const IMUnreadMsgCntRsp& from);

  inline IMUnreadMsgCntRsp& operator=(const IMUnreadMsgCntRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMUnreadMsgCntRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMUnreadMsgCntRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMUnreadMsgCntRsp* other);

  // implements Message ----------------------------------------------

  IMUnreadMsgCntRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMUnreadMsgCntRsp& from);
  void MergeFrom(const IMUnreadMsgCntRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint32 total_cnt = 2;
  inline bool has_total_cnt() const;
  inline void clear_total_cnt();
  static const int kTotalCntFieldNumber = 2;
  inline ::google::protobuf::uint32 total_cnt() const;
  inline void set_total_cnt(::google::protobuf::uint32 value);

  // repeated .IM.BaseDefine.UnreadInfo unreadinfo_list = 3;
  inline int unreadinfo_list_size() const;
  inline void clear_unreadinfo_list();
  static const int kUnreadinfoListFieldNumber = 3;
  inline const ::IM::BaseDefine::UnreadInfo& unreadinfo_list(int index) const;
  inline ::IM::BaseDefine::UnreadInfo* mutable_unreadinfo_list(int index);
  inline ::IM::BaseDefine::UnreadInfo* add_unreadinfo_list();
  inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UnreadInfo >&
      unreadinfo_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UnreadInfo >*
      mutable_unreadinfo_list();

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.Message.IMUnreadMsgCntRsp)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_total_cnt();
  inline void clear_has_total_cnt();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UnreadInfo > unreadinfo_list_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 total_cnt_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMUnreadMsgCntRsp* default_instance_;
};
// -------------------------------------------------------------------

class IMUnreadAndRecentSessionReq : public ::google::protobuf::MessageLite {
 public:
  IMUnreadAndRecentSessionReq();
  virtual ~IMUnreadAndRecentSessionReq();

  IMUnreadAndRecentSessionReq(const IMUnreadAndRecentSessionReq& from);

  inline IMUnreadAndRecentSessionReq& operator=(const IMUnreadAndRecentSessionReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMUnreadAndRecentSessionReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMUnreadAndRecentSessionReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMUnreadAndRecentSessionReq* other);

  // implements Message ----------------------------------------------

  IMUnreadAndRecentSessionReq* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMUnreadAndRecentSessionReq& from);
  void MergeFrom(const IMUnreadAndRecentSessionReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // optional uint32 domain_id = 21 [default = 1000];
  inline bool has_domain_id() const;
  inline void clear_domain_id();
  static const int kDomainIdFieldNumber = 21;
  inline ::google::protobuf::uint32 domain_id() const;
  inline void set_domain_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMUnreadAndRecentSessionReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();
  inline void set_has_domain_id();
  inline void clear_has_domain_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 domain_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMUnreadAndRecentSessionReq* default_instance_;
};
// -------------------------------------------------------------------

class IMUnreadAndRecentSessionReqInner : public ::google::protobuf::MessageLite {
 public:
  IMUnreadAndRecentSessionReqInner();
  virtual ~IMUnreadAndRecentSessionReqInner();

  IMUnreadAndRecentSessionReqInner(const IMUnreadAndRecentSessionReqInner& from);

  inline IMUnreadAndRecentSessionReqInner& operator=(const IMUnreadAndRecentSessionReqInner& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMUnreadAndRecentSessionReqInner& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMUnreadAndRecentSessionReqInner* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMUnreadAndRecentSessionReqInner* other);

  // implements Message ----------------------------------------------

  IMUnreadAndRecentSessionReqInner* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMUnreadAndRecentSessionReqInner& from);
  void MergeFrom(const IMUnreadAndRecentSessionReqInner& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 app_id = 1;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  inline ::google::protobuf::uint32 app_id() const;
  inline void set_app_id(::google::protobuf::uint32 value);

  // required .IM.Message.IMUnreadAndRecentSessionReq unread_recent_session_req = 2;
  inline bool has_unread_recent_session_req() const;
  inline void clear_unread_recent_session_req();
  static const int kUnreadRecentSessionReqFieldNumber = 2;
  inline const ::IM::Message::IMUnreadAndRecentSessionReq& unread_recent_session_req() const;
  inline ::IM::Message::IMUnreadAndRecentSessionReq* mutable_unread_recent_session_req();
  inline ::IM::Message::IMUnreadAndRecentSessionReq* release_unread_recent_session_req();
  inline void set_allocated_unread_recent_session_req(::IM::Message::IMUnreadAndRecentSessionReq* unread_recent_session_req);

  // @@protoc_insertion_point(class_scope:IM.Message.IMUnreadAndRecentSessionReqInner)
 private:
  inline void set_has_app_id();
  inline void clear_has_app_id();
  inline void set_has_unread_recent_session_req();
  inline void clear_has_unread_recent_session_req();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::IM::Message::IMUnreadAndRecentSessionReq* unread_recent_session_req_;
  ::google::protobuf::uint32 app_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMUnreadAndRecentSessionReqInner* default_instance_;
};
// -------------------------------------------------------------------

class IMUnreadAndRecentSessionRsp : public ::google::protobuf::MessageLite {
 public:
  IMUnreadAndRecentSessionRsp();
  virtual ~IMUnreadAndRecentSessionRsp();

  IMUnreadAndRecentSessionRsp(const IMUnreadAndRecentSessionRsp& from);

  inline IMUnreadAndRecentSessionRsp& operator=(const IMUnreadAndRecentSessionRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMUnreadAndRecentSessionRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMUnreadAndRecentSessionRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMUnreadAndRecentSessionRsp* other);

  // implements Message ----------------------------------------------

  IMUnreadAndRecentSessionRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMUnreadAndRecentSessionRsp& from);
  void MergeFrom(const IMUnreadAndRecentSessionRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint32 total_unread_cnt = 2;
  inline bool has_total_unread_cnt() const;
  inline void clear_total_unread_cnt();
  static const int kTotalUnreadCntFieldNumber = 2;
  inline ::google::protobuf::uint32 total_unread_cnt() const;
  inline void set_total_unread_cnt(::google::protobuf::uint32 value);

  // repeated .IM.BaseDefine.ContactListInfo contact_list = 3;
  inline int contact_list_size() const;
  inline void clear_contact_list();
  static const int kContactListFieldNumber = 3;
  inline const ::IM::BaseDefine::ContactListInfo& contact_list(int index) const;
  inline ::IM::BaseDefine::ContactListInfo* mutable_contact_list(int index);
  inline ::IM::BaseDefine::ContactListInfo* add_contact_list();
  inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::ContactListInfo >&
      contact_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::ContactListInfo >*
      mutable_contact_list();

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.Message.IMUnreadAndRecentSessionRsp)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_total_unread_cnt();
  inline void clear_has_total_unread_cnt();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::ContactListInfo > contact_list_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 total_unread_cnt_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMUnreadAndRecentSessionRsp* default_instance_;
};
// -------------------------------------------------------------------

class IMGetMsgListReq : public ::google::protobuf::MessageLite {
 public:
  IMGetMsgListReq();
  virtual ~IMGetMsgListReq();

  IMGetMsgListReq(const IMGetMsgListReq& from);

  inline IMGetMsgListReq& operator=(const IMGetMsgListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMGetMsgListReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMGetMsgListReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMGetMsgListReq* other);

  // implements Message ----------------------------------------------

  IMGetMsgListReq* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMGetMsgListReq& from);
  void MergeFrom(const IMGetMsgListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required .IM.BaseDefine.SessionType session_type = 2;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 2;
  inline ::IM::BaseDefine::SessionType session_type() const;
  inline void set_session_type(::IM::BaseDefine::SessionType value);

  // required uint64 session_id = 3;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  inline ::google::protobuf::uint64 session_id() const;
  inline void set_session_id(::google::protobuf::uint64 value);

  // required uint32 msg_id_begin = 4;
  inline bool has_msg_id_begin() const;
  inline void clear_msg_id_begin();
  static const int kMsgIdBeginFieldNumber = 4;
  inline ::google::protobuf::uint32 msg_id_begin() const;
  inline void set_msg_id_begin(::google::protobuf::uint32 value);

  // required uint32 msg_cnt = 5;
  inline bool has_msg_cnt() const;
  inline void clear_msg_cnt();
  static const int kMsgCntFieldNumber = 5;
  inline ::google::protobuf::uint32 msg_cnt() const;
  inline void set_msg_cnt(::google::protobuf::uint32 value);

  // optional uint64 msg_item = 6;
  inline bool has_msg_item() const;
  inline void clear_msg_item();
  static const int kMsgItemFieldNumber = 6;
  inline ::google::protobuf::uint64 msg_item() const;
  inline void set_msg_item(::google::protobuf::uint64 value);

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // optional .IM.BaseDefine.ExtInfo ext_info = 21;
  inline bool has_ext_info() const;
  inline void clear_ext_info();
  static const int kExtInfoFieldNumber = 21;
  inline const ::IM::BaseDefine::ExtInfo& ext_info() const;
  inline ::IM::BaseDefine::ExtInfo* mutable_ext_info();
  inline ::IM::BaseDefine::ExtInfo* release_ext_info();
  inline void set_allocated_ext_info(::IM::BaseDefine::ExtInfo* ext_info);

  // optional uint32 domain_id = 22 [default = 1000];
  inline bool has_domain_id() const;
  inline void clear_domain_id();
  static const int kDomainIdFieldNumber = 22;
  inline ::google::protobuf::uint32 domain_id() const;
  inline void set_domain_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMGetMsgListReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_msg_id_begin();
  inline void clear_has_msg_id_begin();
  inline void set_has_msg_cnt();
  inline void clear_has_msg_cnt();
  inline void set_has_msg_item();
  inline void clear_has_msg_item();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();
  inline void set_has_ext_info();
  inline void clear_has_ext_info();
  inline void set_has_domain_id();
  inline void clear_has_domain_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 session_id_;
  int session_type_;
  ::google::protobuf::uint32 msg_id_begin_;
  ::google::protobuf::uint64 msg_item_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 msg_cnt_;
  ::google::protobuf::uint32 domain_id_;
  ::IM::BaseDefine::ExtInfo* ext_info_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMGetMsgListReq* default_instance_;
};
// -------------------------------------------------------------------

class IMGetMsgListRsp : public ::google::protobuf::MessageLite {
 public:
  IMGetMsgListRsp();
  virtual ~IMGetMsgListRsp();

  IMGetMsgListRsp(const IMGetMsgListRsp& from);

  inline IMGetMsgListRsp& operator=(const IMGetMsgListRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMGetMsgListRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMGetMsgListRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMGetMsgListRsp* other);

  // implements Message ----------------------------------------------

  IMGetMsgListRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMGetMsgListRsp& from);
  void MergeFrom(const IMGetMsgListRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required .IM.BaseDefine.SessionType session_type = 2;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 2;
  inline ::IM::BaseDefine::SessionType session_type() const;
  inline void set_session_type(::IM::BaseDefine::SessionType value);

  // required uint64 session_id = 3;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  inline ::google::protobuf::uint64 session_id() const;
  inline void set_session_id(::google::protobuf::uint64 value);

  // required uint32 msg_id_begin = 4;
  inline bool has_msg_id_begin() const;
  inline void clear_msg_id_begin();
  static const int kMsgIdBeginFieldNumber = 4;
  inline ::google::protobuf::uint32 msg_id_begin() const;
  inline void set_msg_id_begin(::google::protobuf::uint32 value);

  // repeated .IM.BaseDefine.MsgInfo msg_list = 5;
  inline int msg_list_size() const;
  inline void clear_msg_list();
  static const int kMsgListFieldNumber = 5;
  inline const ::IM::BaseDefine::MsgInfo& msg_list(int index) const;
  inline ::IM::BaseDefine::MsgInfo* mutable_msg_list(int index);
  inline ::IM::BaseDefine::MsgInfo* add_msg_list();
  inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgInfo >&
      msg_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgInfo >*
      mutable_msg_list();

  // optional uint64 msg_item = 6;
  inline bool has_msg_item() const;
  inline void clear_msg_item();
  static const int kMsgItemFieldNumber = 6;
  inline ::google::protobuf::uint64 msg_item() const;
  inline void set_msg_item(::google::protobuf::uint64 value);

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // optional .IM.BaseDefine.ExtInfo ext_info = 21;
  inline bool has_ext_info() const;
  inline void clear_ext_info();
  static const int kExtInfoFieldNumber = 21;
  inline const ::IM::BaseDefine::ExtInfo& ext_info() const;
  inline ::IM::BaseDefine::ExtInfo* mutable_ext_info();
  inline ::IM::BaseDefine::ExtInfo* release_ext_info();
  inline void set_allocated_ext_info(::IM::BaseDefine::ExtInfo* ext_info);

  // @@protoc_insertion_point(class_scope:IM.Message.IMGetMsgListRsp)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_msg_id_begin();
  inline void clear_has_msg_id_begin();
  inline void set_has_msg_item();
  inline void clear_has_msg_item();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();
  inline void set_has_ext_info();
  inline void clear_has_ext_info();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 session_id_;
  int session_type_;
  ::google::protobuf::uint32 msg_id_begin_;
  ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgInfo > msg_list_;
  ::google::protobuf::uint64 msg_item_;
  ::std::string* attach_data_;
  ::IM::BaseDefine::ExtInfo* ext_info_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMGetMsgListRsp* default_instance_;
};
// -------------------------------------------------------------------

class IMGetLatestMsgIdReq : public ::google::protobuf::MessageLite {
 public:
  IMGetLatestMsgIdReq();
  virtual ~IMGetLatestMsgIdReq();

  IMGetLatestMsgIdReq(const IMGetLatestMsgIdReq& from);

  inline IMGetLatestMsgIdReq& operator=(const IMGetLatestMsgIdReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMGetLatestMsgIdReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMGetLatestMsgIdReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMGetLatestMsgIdReq* other);

  // implements Message ----------------------------------------------

  IMGetLatestMsgIdReq* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMGetLatestMsgIdReq& from);
  void MergeFrom(const IMGetLatestMsgIdReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required .IM.BaseDefine.SessionType session_type = 2;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 2;
  inline ::IM::BaseDefine::SessionType session_type() const;
  inline void set_session_type(::IM::BaseDefine::SessionType value);

  // required uint64 session_id = 3;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  inline ::google::protobuf::uint64 session_id() const;
  inline void set_session_id(::google::protobuf::uint64 value);

  // optional uint64 msg_item = 4;
  inline bool has_msg_item() const;
  inline void clear_msg_item();
  static const int kMsgItemFieldNumber = 4;
  inline ::google::protobuf::uint64 msg_item() const;
  inline void set_msg_item(::google::protobuf::uint64 value);

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // optional .IM.BaseDefine.ExtInfo ext_info = 21;
  inline bool has_ext_info() const;
  inline void clear_ext_info();
  static const int kExtInfoFieldNumber = 21;
  inline const ::IM::BaseDefine::ExtInfo& ext_info() const;
  inline ::IM::BaseDefine::ExtInfo* mutable_ext_info();
  inline ::IM::BaseDefine::ExtInfo* release_ext_info();
  inline void set_allocated_ext_info(::IM::BaseDefine::ExtInfo* ext_info);

  // optional uint32 domain_id = 22 [default = 1000];
  inline bool has_domain_id() const;
  inline void clear_domain_id();
  static const int kDomainIdFieldNumber = 22;
  inline ::google::protobuf::uint32 domain_id() const;
  inline void set_domain_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMGetLatestMsgIdReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_msg_item();
  inline void clear_has_msg_item();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();
  inline void set_has_ext_info();
  inline void clear_has_ext_info();
  inline void set_has_domain_id();
  inline void clear_has_domain_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 session_id_;
  ::google::protobuf::uint64 msg_item_;
  int session_type_;
  ::google::protobuf::uint32 domain_id_;
  ::std::string* attach_data_;
  ::IM::BaseDefine::ExtInfo* ext_info_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMGetLatestMsgIdReq* default_instance_;
};
// -------------------------------------------------------------------

class IMGetLatestMsgIdRsp : public ::google::protobuf::MessageLite {
 public:
  IMGetLatestMsgIdRsp();
  virtual ~IMGetLatestMsgIdRsp();

  IMGetLatestMsgIdRsp(const IMGetLatestMsgIdRsp& from);

  inline IMGetLatestMsgIdRsp& operator=(const IMGetLatestMsgIdRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMGetLatestMsgIdRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMGetLatestMsgIdRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMGetLatestMsgIdRsp* other);

  // implements Message ----------------------------------------------

  IMGetLatestMsgIdRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMGetLatestMsgIdRsp& from);
  void MergeFrom(const IMGetLatestMsgIdRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required .IM.BaseDefine.SessionType session_type = 2;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 2;
  inline ::IM::BaseDefine::SessionType session_type() const;
  inline void set_session_type(::IM::BaseDefine::SessionType value);

  // required uint64 session_id = 3;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  inline ::google::protobuf::uint64 session_id() const;
  inline void set_session_id(::google::protobuf::uint64 value);

  // required uint32 latest_msg_id = 4;
  inline bool has_latest_msg_id() const;
  inline void clear_latest_msg_id();
  static const int kLatestMsgIdFieldNumber = 4;
  inline ::google::protobuf::uint32 latest_msg_id() const;
  inline void set_latest_msg_id(::google::protobuf::uint32 value);

  // optional uint64 msg_item = 5;
  inline bool has_msg_item() const;
  inline void clear_msg_item();
  static const int kMsgItemFieldNumber = 5;
  inline ::google::protobuf::uint64 msg_item() const;
  inline void set_msg_item(::google::protobuf::uint64 value);

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // optional .IM.BaseDefine.ExtInfo ext_info = 21;
  inline bool has_ext_info() const;
  inline void clear_ext_info();
  static const int kExtInfoFieldNumber = 21;
  inline const ::IM::BaseDefine::ExtInfo& ext_info() const;
  inline ::IM::BaseDefine::ExtInfo* mutable_ext_info();
  inline ::IM::BaseDefine::ExtInfo* release_ext_info();
  inline void set_allocated_ext_info(::IM::BaseDefine::ExtInfo* ext_info);

  // @@protoc_insertion_point(class_scope:IM.Message.IMGetLatestMsgIdRsp)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_latest_msg_id();
  inline void clear_has_latest_msg_id();
  inline void set_has_msg_item();
  inline void clear_has_msg_item();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();
  inline void set_has_ext_info();
  inline void clear_has_ext_info();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 session_id_;
  int session_type_;
  ::google::protobuf::uint32 latest_msg_id_;
  ::google::protobuf::uint64 msg_item_;
  ::std::string* attach_data_;
  ::IM::BaseDefine::ExtInfo* ext_info_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMGetLatestMsgIdRsp* default_instance_;
};
// -------------------------------------------------------------------

class IMGetMsgByIdReq : public ::google::protobuf::MessageLite {
 public:
  IMGetMsgByIdReq();
  virtual ~IMGetMsgByIdReq();

  IMGetMsgByIdReq(const IMGetMsgByIdReq& from);

  inline IMGetMsgByIdReq& operator=(const IMGetMsgByIdReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMGetMsgByIdReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMGetMsgByIdReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMGetMsgByIdReq* other);

  // implements Message ----------------------------------------------

  IMGetMsgByIdReq* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMGetMsgByIdReq& from);
  void MergeFrom(const IMGetMsgByIdReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required .IM.BaseDefine.SessionType session_type = 2;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 2;
  inline ::IM::BaseDefine::SessionType session_type() const;
  inline void set_session_type(::IM::BaseDefine::SessionType value);

  // required uint64 session_id = 3;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  inline ::google::protobuf::uint64 session_id() const;
  inline void set_session_id(::google::protobuf::uint64 value);

  // repeated uint32 msg_id_list = 4;
  inline int msg_id_list_size() const;
  inline void clear_msg_id_list();
  static const int kMsgIdListFieldNumber = 4;
  inline ::google::protobuf::uint32 msg_id_list(int index) const;
  inline void set_msg_id_list(int index, ::google::protobuf::uint32 value);
  inline void add_msg_id_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      msg_id_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_msg_id_list();

  // optional uint64 msg_item = 5;
  inline bool has_msg_item() const;
  inline void clear_msg_item();
  static const int kMsgItemFieldNumber = 5;
  inline ::google::protobuf::uint64 msg_item() const;
  inline void set_msg_item(::google::protobuf::uint64 value);

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // optional .IM.BaseDefine.ExtInfo ext_info = 21;
  inline bool has_ext_info() const;
  inline void clear_ext_info();
  static const int kExtInfoFieldNumber = 21;
  inline const ::IM::BaseDefine::ExtInfo& ext_info() const;
  inline ::IM::BaseDefine::ExtInfo* mutable_ext_info();
  inline ::IM::BaseDefine::ExtInfo* release_ext_info();
  inline void set_allocated_ext_info(::IM::BaseDefine::ExtInfo* ext_info);

  // optional uint32 domain_id = 22 [default = 1000];
  inline bool has_domain_id() const;
  inline void clear_domain_id();
  static const int kDomainIdFieldNumber = 22;
  inline ::google::protobuf::uint32 domain_id() const;
  inline void set_domain_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMGetMsgByIdReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_msg_item();
  inline void clear_has_msg_item();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();
  inline void set_has_ext_info();
  inline void clear_has_ext_info();
  inline void set_has_domain_id();
  inline void clear_has_domain_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 session_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > msg_id_list_;
  ::google::protobuf::uint64 msg_item_;
  int session_type_;
  ::google::protobuf::uint32 domain_id_;
  ::std::string* attach_data_;
  ::IM::BaseDefine::ExtInfo* ext_info_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMGetMsgByIdReq* default_instance_;
};
// -------------------------------------------------------------------

class IMGetMsgByIdRsp : public ::google::protobuf::MessageLite {
 public:
  IMGetMsgByIdRsp();
  virtual ~IMGetMsgByIdRsp();

  IMGetMsgByIdRsp(const IMGetMsgByIdRsp& from);

  inline IMGetMsgByIdRsp& operator=(const IMGetMsgByIdRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMGetMsgByIdRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMGetMsgByIdRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMGetMsgByIdRsp* other);

  // implements Message ----------------------------------------------

  IMGetMsgByIdRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMGetMsgByIdRsp& from);
  void MergeFrom(const IMGetMsgByIdRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required .IM.BaseDefine.SessionType session_type = 2;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 2;
  inline ::IM::BaseDefine::SessionType session_type() const;
  inline void set_session_type(::IM::BaseDefine::SessionType value);

  // required uint64 session_id = 3;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  inline ::google::protobuf::uint64 session_id() const;
  inline void set_session_id(::google::protobuf::uint64 value);

  // repeated .IM.BaseDefine.MsgInfo msg_list = 4;
  inline int msg_list_size() const;
  inline void clear_msg_list();
  static const int kMsgListFieldNumber = 4;
  inline const ::IM::BaseDefine::MsgInfo& msg_list(int index) const;
  inline ::IM::BaseDefine::MsgInfo* mutable_msg_list(int index);
  inline ::IM::BaseDefine::MsgInfo* add_msg_list();
  inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgInfo >&
      msg_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgInfo >*
      mutable_msg_list();

  // optional uint64 msg_item = 5;
  inline bool has_msg_item() const;
  inline void clear_msg_item();
  static const int kMsgItemFieldNumber = 5;
  inline ::google::protobuf::uint64 msg_item() const;
  inline void set_msg_item(::google::protobuf::uint64 value);

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // optional .IM.BaseDefine.ExtInfo ext_info = 21;
  inline bool has_ext_info() const;
  inline void clear_ext_info();
  static const int kExtInfoFieldNumber = 21;
  inline const ::IM::BaseDefine::ExtInfo& ext_info() const;
  inline ::IM::BaseDefine::ExtInfo* mutable_ext_info();
  inline ::IM::BaseDefine::ExtInfo* release_ext_info();
  inline void set_allocated_ext_info(::IM::BaseDefine::ExtInfo* ext_info);

  // @@protoc_insertion_point(class_scope:IM.Message.IMGetMsgByIdRsp)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_msg_item();
  inline void clear_has_msg_item();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();
  inline void set_has_ext_info();
  inline void clear_has_ext_info();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 session_id_;
  ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgInfo > msg_list_;
  ::google::protobuf::uint64 msg_item_;
  ::std::string* attach_data_;
  ::IM::BaseDefine::ExtInfo* ext_info_;
  int session_type_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMGetMsgByIdRsp* default_instance_;
};
// -------------------------------------------------------------------

class IMGeekCtlInner : public ::google::protobuf::MessageLite {
 public:
  IMGeekCtlInner();
  virtual ~IMGeekCtlInner();

  IMGeekCtlInner(const IMGeekCtlInner& from);

  inline IMGeekCtlInner& operator=(const IMGeekCtlInner& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMGeekCtlInner& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMGeekCtlInner* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMGeekCtlInner* other);

  // implements Message ----------------------------------------------

  IMGeekCtlInner* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMGeekCtlInner& from);
  void MergeFrom(const IMGeekCtlInner& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes user_data = 1;
  inline bool has_user_data() const;
  inline void clear_user_data();
  static const int kUserDataFieldNumber = 1;
  inline const ::std::string& user_data() const;
  inline void set_user_data(const ::std::string& value);
  inline void set_user_data(const char* value);
  inline void set_user_data(const void* value, size_t size);
  inline ::std::string* mutable_user_data();
  inline ::std::string* release_user_data();
  inline void set_allocated_user_data(::std::string* user_data);

  // required bytes msg_data = 2;
  inline bool has_msg_data() const;
  inline void clear_msg_data();
  static const int kMsgDataFieldNumber = 2;
  inline const ::std::string& msg_data() const;
  inline void set_msg_data(const ::std::string& value);
  inline void set_msg_data(const char* value);
  inline void set_msg_data(const void* value, size_t size);
  inline ::std::string* mutable_msg_data();
  inline ::std::string* release_msg_data();
  inline void set_allocated_msg_data(::std::string* msg_data);

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.Message.IMGeekCtlInner)
 private:
  inline void set_has_user_data();
  inline void clear_has_user_data();
  inline void set_has_msg_data();
  inline void clear_has_msg_data();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* user_data_;
  ::std::string* msg_data_;
  ::std::string* attach_data_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMGeekCtlInner* default_instance_;
};
// -------------------------------------------------------------------

class IMGeekControl : public ::google::protobuf::MessageLite {
 public:
  IMGeekControl();
  virtual ~IMGeekControl();

  IMGeekControl(const IMGeekControl& from);

  inline IMGeekControl& operator=(const IMGeekControl& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMGeekControl& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMGeekControl* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMGeekControl* other);

  // implements Message ----------------------------------------------

  IMGeekControl* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMGeekControl& from);
  void MergeFrom(const IMGeekControl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required bytes msg_data = 2;
  inline bool has_msg_data() const;
  inline void clear_msg_data();
  static const int kMsgDataFieldNumber = 2;
  inline const ::std::string& msg_data() const;
  inline void set_msg_data(const ::std::string& value);
  inline void set_msg_data(const char* value);
  inline void set_msg_data(const void* value, size_t size);
  inline ::std::string* mutable_msg_data();
  inline ::std::string* release_msg_data();
  inline void set_allocated_msg_data(::std::string* msg_data);

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.Message.IMGeekControl)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_msg_data();
  inline void clear_has_msg_data();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* msg_data_;
  ::std::string* attach_data_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMGeekControl* default_instance_;
};
// -------------------------------------------------------------------

class IMMsgDataPushNotify : public ::google::protobuf::MessageLite {
 public:
  IMMsgDataPushNotify();
  virtual ~IMMsgDataPushNotify();

  IMMsgDataPushNotify(const IMMsgDataPushNotify& from);

  inline IMMsgDataPushNotify& operator=(const IMMsgDataPushNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMMsgDataPushNotify& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMMsgDataPushNotify* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMMsgDataPushNotify* other);

  // implements Message ----------------------------------------------

  IMMsgDataPushNotify* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMMsgDataPushNotify& from);
  void MergeFrom(const IMMsgDataPushNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 from_user_id = 1;
  inline bool has_from_user_id() const;
  inline void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 from_user_id() const;
  inline void set_from_user_id(::google::protobuf::uint64 value);

  // required uint64 to_session_id = 2;
  inline bool has_to_session_id() const;
  inline void clear_to_session_id();
  static const int kToSessionIdFieldNumber = 2;
  inline ::google::protobuf::uint64 to_session_id() const;
  inline void set_to_session_id(::google::protobuf::uint64 value);

  // required uint32 create_time = 3;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 create_time() const;
  inline void set_create_time(::google::protobuf::uint32 value);

  // required string msg_type = 4;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 4;
  inline const ::std::string& msg_type() const;
  inline void set_msg_type(const ::std::string& value);
  inline void set_msg_type(const char* value);
  inline void set_msg_type(const char* value, size_t size);
  inline ::std::string* mutable_msg_type();
  inline ::std::string* release_msg_type();
  inline void set_allocated_msg_type(::std::string* msg_type);

  // required string msg_content = 5;
  inline bool has_msg_content() const;
  inline void clear_msg_content();
  static const int kMsgContentFieldNumber = 5;
  inline const ::std::string& msg_content() const;
  inline void set_msg_content(const ::std::string& value);
  inline void set_msg_content(const char* value);
  inline void set_msg_content(const char* value, size_t size);
  inline ::std::string* mutable_msg_content();
  inline ::std::string* release_msg_content();
  inline void set_allocated_msg_content(::std::string* msg_content);

  // @@protoc_insertion_point(class_scope:IM.Message.IMMsgDataPushNotify)
 private:
  inline void set_has_from_user_id();
  inline void clear_has_from_user_id();
  inline void set_has_to_session_id();
  inline void clear_has_to_session_id();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_msg_content();
  inline void clear_has_msg_content();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 from_user_id_;
  ::google::protobuf::uint64 to_session_id_;
  ::std::string* msg_type_;
  ::std::string* msg_content_;
  ::google::protobuf::uint32 create_time_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMMsgDataPushNotify* default_instance_;
};
// -------------------------------------------------------------------

class IMMsgDataPushNotifyInner : public ::google::protobuf::MessageLite {
 public:
  IMMsgDataPushNotifyInner();
  virtual ~IMMsgDataPushNotifyInner();

  IMMsgDataPushNotifyInner(const IMMsgDataPushNotifyInner& from);

  inline IMMsgDataPushNotifyInner& operator=(const IMMsgDataPushNotifyInner& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMMsgDataPushNotifyInner& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMMsgDataPushNotifyInner* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMMsgDataPushNotifyInner* other);

  // implements Message ----------------------------------------------

  IMMsgDataPushNotifyInner* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMMsgDataPushNotifyInner& from);
  void MergeFrom(const IMMsgDataPushNotifyInner& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 from_user_id = 1;
  inline bool has_from_user_id() const;
  inline void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 from_user_id() const;
  inline void set_from_user_id(::google::protobuf::uint64 value);

  // repeated uint64 to_session_id = 2;
  inline int to_session_id_size() const;
  inline void clear_to_session_id();
  static const int kToSessionIdFieldNumber = 2;
  inline ::google::protobuf::uint64 to_session_id(int index) const;
  inline void set_to_session_id(int index, ::google::protobuf::uint64 value);
  inline void add_to_session_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      to_session_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_to_session_id();

  // required uint32 send_type = 3;
  inline bool has_send_type() const;
  inline void clear_send_type();
  static const int kSendTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 send_type() const;
  inline void set_send_type(::google::protobuf::uint32 value);

  // required string msg_type = 4;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 4;
  inline const ::std::string& msg_type() const;
  inline void set_msg_type(const ::std::string& value);
  inline void set_msg_type(const char* value);
  inline void set_msg_type(const char* value, size_t size);
  inline ::std::string* mutable_msg_type();
  inline ::std::string* release_msg_type();
  inline void set_allocated_msg_type(::std::string* msg_type);

  // required string msg_content = 5;
  inline bool has_msg_content() const;
  inline void clear_msg_content();
  static const int kMsgContentFieldNumber = 5;
  inline const ::std::string& msg_content() const;
  inline void set_msg_content(const ::std::string& value);
  inline void set_msg_content(const char* value);
  inline void set_msg_content(const char* value, size_t size);
  inline ::std::string* mutable_msg_content();
  inline ::std::string* release_msg_content();
  inline void set_allocated_msg_content(::std::string* msg_content);

  // @@protoc_insertion_point(class_scope:IM.Message.IMMsgDataPushNotifyInner)
 private:
  inline void set_has_from_user_id();
  inline void clear_has_from_user_id();
  inline void set_has_send_type();
  inline void clear_has_send_type();
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_msg_content();
  inline void clear_has_msg_content();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 from_user_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > to_session_id_;
  ::std::string* msg_type_;
  ::std::string* msg_content_;
  ::google::protobuf::uint32 send_type_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMMsgDataPushNotifyInner* default_instance_;
};
// ===================================================================


// ===================================================================

// IMMsgData

// required uint64 from_user_id = 1;
inline bool IMMsgData::has_from_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMMsgData::set_has_from_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMMsgData::clear_has_from_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMMsgData::clear_from_user_id() {
  from_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_from_user_id();
}
inline ::google::protobuf::uint64 IMMsgData::from_user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.from_user_id)
  return from_user_id_;
}
inline void IMMsgData::set_from_user_id(::google::protobuf::uint64 value) {
  set_has_from_user_id();
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.from_user_id)
}

// required uint64 to_session_id = 2;
inline bool IMMsgData::has_to_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMMsgData::set_has_to_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMMsgData::clear_has_to_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMMsgData::clear_to_session_id() {
  to_session_id_ = GOOGLE_ULONGLONG(0);
  clear_has_to_session_id();
}
inline ::google::protobuf::uint64 IMMsgData::to_session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.to_session_id)
  return to_session_id_;
}
inline void IMMsgData::set_to_session_id(::google::protobuf::uint64 value) {
  set_has_to_session_id();
  to_session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.to_session_id)
}

// required uint32 msg_id = 3;
inline bool IMMsgData::has_msg_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMMsgData::set_has_msg_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMMsgData::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMMsgData::clear_msg_id() {
  msg_id_ = 0u;
  clear_has_msg_id();
}
inline ::google::protobuf::uint32 IMMsgData::msg_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.msg_id)
  return msg_id_;
}
inline void IMMsgData::set_msg_id(::google::protobuf::uint32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.msg_id)
}

// required uint32 create_time = 4;
inline bool IMMsgData::has_create_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMMsgData::set_has_create_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMMsgData::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMMsgData::clear_create_time() {
  create_time_ = 0u;
  clear_has_create_time();
}
inline ::google::protobuf::uint32 IMMsgData::create_time() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.create_time)
  return create_time_;
}
inline void IMMsgData::set_create_time(::google::protobuf::uint32 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.create_time)
}

// optional .IM.BaseDefine.MsgType msg_type = 5;
inline bool IMMsgData::has_msg_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMMsgData::set_has_msg_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMMsgData::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMMsgData::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::IM::BaseDefine::MsgType IMMsgData::msg_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.msg_type)
  return static_cast< ::IM::BaseDefine::MsgType >(msg_type_);
}
inline void IMMsgData::set_msg_type(::IM::BaseDefine::MsgType value) {
  assert(::IM::BaseDefine::MsgType_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.msg_type)
}

// required bytes msg_data = 6;
inline bool IMMsgData::has_msg_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IMMsgData::set_has_msg_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IMMsgData::clear_has_msg_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IMMsgData::clear_msg_data() {
  if (msg_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_->clear();
  }
  clear_has_msg_data();
}
inline const ::std::string& IMMsgData::msg_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.msg_data)
  return *msg_data_;
}
inline void IMMsgData::set_msg_data(const ::std::string& value) {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_ = new ::std::string;
  }
  msg_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.msg_data)
}
inline void IMMsgData::set_msg_data(const char* value) {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_ = new ::std::string;
  }
  msg_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMMsgData.msg_data)
}
inline void IMMsgData::set_msg_data(const void* value, size_t size) {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_ = new ::std::string;
  }
  msg_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMMsgData.msg_data)
}
inline ::std::string* IMMsgData::mutable_msg_data() {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgData.msg_data)
  return msg_data_;
}
inline ::std::string* IMMsgData::release_msg_data() {
  clear_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_data_;
    msg_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMMsgData::set_allocated_msg_data(::std::string* msg_data) {
  if (msg_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_data_;
  }
  if (msg_data) {
    set_has_msg_data();
    msg_data_ = msg_data;
  } else {
    clear_has_msg_data();
    msg_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsgData.msg_data)
}

// optional uint64 msg_item = 7;
inline bool IMMsgData::has_msg_item() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IMMsgData::set_has_msg_item() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IMMsgData::clear_has_msg_item() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IMMsgData::clear_msg_item() {
  msg_item_ = GOOGLE_ULONGLONG(0);
  clear_has_msg_item();
}
inline ::google::protobuf::uint64 IMMsgData::msg_item() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.msg_item)
  return msg_item_;
}
inline void IMMsgData::set_msg_item(::google::protobuf::uint64 value) {
  set_has_msg_item();
  msg_item_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.msg_item)
}

// optional .IM.BaseDefine.SessionType session_type = 8;
inline bool IMMsgData::has_session_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IMMsgData::set_has_session_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IMMsgData::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IMMsgData::clear_session_type() {
  session_type_ = 0;
  clear_has_session_type();
}
inline ::IM::BaseDefine::SessionType IMMsgData::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMMsgData::set_session_type(::IM::BaseDefine::SessionType value) {
  assert(::IM::BaseDefine::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.session_type)
}

// optional uint32 app_id = 20;
inline bool IMMsgData::has_app_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void IMMsgData::set_has_app_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void IMMsgData::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void IMMsgData::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 IMMsgData::app_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.app_id)
  return app_id_;
}
inline void IMMsgData::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.app_id)
}

// optional uint32 domain_id = 21;
inline bool IMMsgData::has_domain_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void IMMsgData::set_has_domain_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void IMMsgData::clear_has_domain_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void IMMsgData::clear_domain_id() {
  domain_id_ = 0u;
  clear_has_domain_id();
}
inline ::google::protobuf::uint32 IMMsgData::domain_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.domain_id)
  return domain_id_;
}
inline void IMMsgData::set_domain_id(::google::protobuf::uint32 value) {
  set_has_domain_id();
  domain_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.domain_id)
}

// optional bytes attach_data = 22;
inline bool IMMsgData::has_attach_data() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void IMMsgData::set_has_attach_data() {
  _has_bits_[0] |= 0x00000400u;
}
inline void IMMsgData::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void IMMsgData::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMMsgData::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.attach_data)
  return *attach_data_;
}
inline void IMMsgData::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.attach_data)
}
inline void IMMsgData::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMMsgData.attach_data)
}
inline void IMMsgData::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMMsgData.attach_data)
}
inline ::std::string* IMMsgData::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgData.attach_data)
  return attach_data_;
}
inline ::std::string* IMMsgData::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMMsgData::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsgData.attach_data)
}

// optional .IM.BaseDefine.ExtInfo ext_info = 23;
inline bool IMMsgData::has_ext_info() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void IMMsgData::set_has_ext_info() {
  _has_bits_[0] |= 0x00000800u;
}
inline void IMMsgData::clear_has_ext_info() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void IMMsgData::clear_ext_info() {
  if (ext_info_ != NULL) ext_info_->::IM::BaseDefine::ExtInfo::Clear();
  clear_has_ext_info();
}
inline const ::IM::BaseDefine::ExtInfo& IMMsgData::ext_info() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.ext_info)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return ext_info_ != NULL ? *ext_info_ : *default_instance().ext_info_;
#else
  return ext_info_ != NULL ? *ext_info_ : *default_instance_->ext_info_;
#endif
}
inline ::IM::BaseDefine::ExtInfo* IMMsgData::mutable_ext_info() {
  set_has_ext_info();
  if (ext_info_ == NULL) ext_info_ = new ::IM::BaseDefine::ExtInfo;
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgData.ext_info)
  return ext_info_;
}
inline ::IM::BaseDefine::ExtInfo* IMMsgData::release_ext_info() {
  clear_has_ext_info();
  ::IM::BaseDefine::ExtInfo* temp = ext_info_;
  ext_info_ = NULL;
  return temp;
}
inline void IMMsgData::set_allocated_ext_info(::IM::BaseDefine::ExtInfo* ext_info) {
  delete ext_info_;
  ext_info_ = ext_info;
  if (ext_info) {
    set_has_ext_info();
  } else {
    clear_has_ext_info();
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsgData.ext_info)
}

// -------------------------------------------------------------------

// IMMsgPlatFormTrans

// required .IM.Message.IMMsgData im_msg_data = 1;
inline bool IMMsgPlatFormTrans::has_im_msg_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMMsgPlatFormTrans::set_has_im_msg_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMMsgPlatFormTrans::clear_has_im_msg_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMMsgPlatFormTrans::clear_im_msg_data() {
  if (im_msg_data_ != NULL) im_msg_data_->::IM::Message::IMMsgData::Clear();
  clear_has_im_msg_data();
}
inline const ::IM::Message::IMMsgData& IMMsgPlatFormTrans::im_msg_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgPlatFormTrans.im_msg_data)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return im_msg_data_ != NULL ? *im_msg_data_ : *default_instance().im_msg_data_;
#else
  return im_msg_data_ != NULL ? *im_msg_data_ : *default_instance_->im_msg_data_;
#endif
}
inline ::IM::Message::IMMsgData* IMMsgPlatFormTrans::mutable_im_msg_data() {
  set_has_im_msg_data();
  if (im_msg_data_ == NULL) im_msg_data_ = new ::IM::Message::IMMsgData;
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgPlatFormTrans.im_msg_data)
  return im_msg_data_;
}
inline ::IM::Message::IMMsgData* IMMsgPlatFormTrans::release_im_msg_data() {
  clear_has_im_msg_data();
  ::IM::Message::IMMsgData* temp = im_msg_data_;
  im_msg_data_ = NULL;
  return temp;
}
inline void IMMsgPlatFormTrans::set_allocated_im_msg_data(::IM::Message::IMMsgData* im_msg_data) {
  delete im_msg_data_;
  im_msg_data_ = im_msg_data;
  if (im_msg_data) {
    set_has_im_msg_data();
  } else {
    clear_has_im_msg_data();
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsgPlatFormTrans.im_msg_data)
}

// optional bool copy_from = 2;
inline bool IMMsgPlatFormTrans::has_copy_from() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMMsgPlatFormTrans::set_has_copy_from() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMMsgPlatFormTrans::clear_has_copy_from() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMMsgPlatFormTrans::clear_copy_from() {
  copy_from_ = false;
  clear_has_copy_from();
}
inline bool IMMsgPlatFormTrans::copy_from() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgPlatFormTrans.copy_from)
  return copy_from_;
}
inline void IMMsgPlatFormTrans::set_copy_from(bool value) {
  set_has_copy_from();
  copy_from_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgPlatFormTrans.copy_from)
}

// -------------------------------------------------------------------

// IMMsgDataAck

// required uint64 user_id = 1;
inline bool IMMsgDataAck::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMMsgDataAck::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMMsgDataAck::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMMsgDataAck::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 IMMsgDataAck::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataAck.user_id)
  return user_id_;
}
inline void IMMsgDataAck::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataAck.user_id)
}

// required uint64 session_id = 2;
inline bool IMMsgDataAck::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMMsgDataAck::set_has_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMMsgDataAck::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMMsgDataAck::clear_session_id() {
  session_id_ = GOOGLE_ULONGLONG(0);
  clear_has_session_id();
}
inline ::google::protobuf::uint64 IMMsgDataAck::session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataAck.session_id)
  return session_id_;
}
inline void IMMsgDataAck::set_session_id(::google::protobuf::uint64 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataAck.session_id)
}

// required uint32 msg_id = 3;
inline bool IMMsgDataAck::has_msg_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMMsgDataAck::set_has_msg_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMMsgDataAck::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMMsgDataAck::clear_msg_id() {
  msg_id_ = 0u;
  clear_has_msg_id();
}
inline ::google::protobuf::uint32 IMMsgDataAck::msg_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataAck.msg_id)
  return msg_id_;
}
inline void IMMsgDataAck::set_msg_id(::google::protobuf::uint32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataAck.msg_id)
}

// required .IM.BaseDefine.SessionType session_type = 4;
inline bool IMMsgDataAck::has_session_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMMsgDataAck::set_has_session_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMMsgDataAck::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMMsgDataAck::clear_session_type() {
  session_type_ = 0;
  clear_has_session_type();
}
inline ::IM::BaseDefine::SessionType IMMsgDataAck::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataAck.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMMsgDataAck::set_session_type(::IM::BaseDefine::SessionType value) {
  assert(::IM::BaseDefine::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataAck.session_type)
}

// optional uint64 msg_item = 5;
inline bool IMMsgDataAck::has_msg_item() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMMsgDataAck::set_has_msg_item() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMMsgDataAck::clear_has_msg_item() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMMsgDataAck::clear_msg_item() {
  msg_item_ = GOOGLE_ULONGLONG(0);
  clear_has_msg_item();
}
inline ::google::protobuf::uint64 IMMsgDataAck::msg_item() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataAck.msg_item)
  return msg_item_;
}
inline void IMMsgDataAck::set_msg_item(::google::protobuf::uint64 value) {
  set_has_msg_item();
  msg_item_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataAck.msg_item)
}

// optional uint32 create_time = 6;
inline bool IMMsgDataAck::has_create_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IMMsgDataAck::set_has_create_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IMMsgDataAck::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IMMsgDataAck::clear_create_time() {
  create_time_ = 0u;
  clear_has_create_time();
}
inline ::google::protobuf::uint32 IMMsgDataAck::create_time() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataAck.create_time)
  return create_time_;
}
inline void IMMsgDataAck::set_create_time(::google::protobuf::uint32 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataAck.create_time)
}

// optional .IM.BaseDefine.ExtInfo ext_info = 7;
inline bool IMMsgDataAck::has_ext_info() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IMMsgDataAck::set_has_ext_info() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IMMsgDataAck::clear_has_ext_info() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IMMsgDataAck::clear_ext_info() {
  if (ext_info_ != NULL) ext_info_->::IM::BaseDefine::ExtInfo::Clear();
  clear_has_ext_info();
}
inline const ::IM::BaseDefine::ExtInfo& IMMsgDataAck::ext_info() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataAck.ext_info)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return ext_info_ != NULL ? *ext_info_ : *default_instance().ext_info_;
#else
  return ext_info_ != NULL ? *ext_info_ : *default_instance_->ext_info_;
#endif
}
inline ::IM::BaseDefine::ExtInfo* IMMsgDataAck::mutable_ext_info() {
  set_has_ext_info();
  if (ext_info_ == NULL) ext_info_ = new ::IM::BaseDefine::ExtInfo;
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgDataAck.ext_info)
  return ext_info_;
}
inline ::IM::BaseDefine::ExtInfo* IMMsgDataAck::release_ext_info() {
  clear_has_ext_info();
  ::IM::BaseDefine::ExtInfo* temp = ext_info_;
  ext_info_ = NULL;
  return temp;
}
inline void IMMsgDataAck::set_allocated_ext_info(::IM::BaseDefine::ExtInfo* ext_info) {
  delete ext_info_;
  ext_info_ = ext_info;
  if (ext_info) {
    set_has_ext_info();
  } else {
    clear_has_ext_info();
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsgDataAck.ext_info)
}

// optional .IM.BaseDefine.MsgResCode res_code = 8;
inline bool IMMsgDataAck::has_res_code() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IMMsgDataAck::set_has_res_code() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IMMsgDataAck::clear_has_res_code() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IMMsgDataAck::clear_res_code() {
  res_code_ = 0;
  clear_has_res_code();
}
inline ::IM::BaseDefine::MsgResCode IMMsgDataAck::res_code() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataAck.res_code)
  return static_cast< ::IM::BaseDefine::MsgResCode >(res_code_);
}
inline void IMMsgDataAck::set_res_code(::IM::BaseDefine::MsgResCode value) {
  assert(::IM::BaseDefine::MsgResCode_IsValid(value));
  set_has_res_code();
  res_code_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataAck.res_code)
}

// -------------------------------------------------------------------

// IMMsgDataReadAck

// required uint64 user_id = 1;
inline bool IMMsgDataReadAck::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMMsgDataReadAck::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMMsgDataReadAck::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMMsgDataReadAck::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 IMMsgDataReadAck::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataReadAck.user_id)
  return user_id_;
}
inline void IMMsgDataReadAck::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataReadAck.user_id)
}

// required uint64 session_id = 2;
inline bool IMMsgDataReadAck::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMMsgDataReadAck::set_has_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMMsgDataReadAck::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMMsgDataReadAck::clear_session_id() {
  session_id_ = GOOGLE_ULONGLONG(0);
  clear_has_session_id();
}
inline ::google::protobuf::uint64 IMMsgDataReadAck::session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataReadAck.session_id)
  return session_id_;
}
inline void IMMsgDataReadAck::set_session_id(::google::protobuf::uint64 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataReadAck.session_id)
}

// required uint32 msg_id = 3;
inline bool IMMsgDataReadAck::has_msg_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMMsgDataReadAck::set_has_msg_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMMsgDataReadAck::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMMsgDataReadAck::clear_msg_id() {
  msg_id_ = 0u;
  clear_has_msg_id();
}
inline ::google::protobuf::uint32 IMMsgDataReadAck::msg_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataReadAck.msg_id)
  return msg_id_;
}
inline void IMMsgDataReadAck::set_msg_id(::google::protobuf::uint32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataReadAck.msg_id)
}

// required .IM.BaseDefine.SessionType session_type = 4;
inline bool IMMsgDataReadAck::has_session_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMMsgDataReadAck::set_has_session_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMMsgDataReadAck::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMMsgDataReadAck::clear_session_type() {
  session_type_ = 0;
  clear_has_session_type();
}
inline ::IM::BaseDefine::SessionType IMMsgDataReadAck::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataReadAck.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMMsgDataReadAck::set_session_type(::IM::BaseDefine::SessionType value) {
  assert(::IM::BaseDefine::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataReadAck.session_type)
}

// optional uint64 msg_item = 5;
inline bool IMMsgDataReadAck::has_msg_item() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMMsgDataReadAck::set_has_msg_item() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMMsgDataReadAck::clear_has_msg_item() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMMsgDataReadAck::clear_msg_item() {
  msg_item_ = GOOGLE_ULONGLONG(0);
  clear_has_msg_item();
}
inline ::google::protobuf::uint64 IMMsgDataReadAck::msg_item() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataReadAck.msg_item)
  return msg_item_;
}
inline void IMMsgDataReadAck::set_msg_item(::google::protobuf::uint64 value) {
  set_has_msg_item();
  msg_item_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataReadAck.msg_item)
}

// optional .IM.BaseDefine.ExtInfo ext_info = 6;
inline bool IMMsgDataReadAck::has_ext_info() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IMMsgDataReadAck::set_has_ext_info() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IMMsgDataReadAck::clear_has_ext_info() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IMMsgDataReadAck::clear_ext_info() {
  if (ext_info_ != NULL) ext_info_->::IM::BaseDefine::ExtInfo::Clear();
  clear_has_ext_info();
}
inline const ::IM::BaseDefine::ExtInfo& IMMsgDataReadAck::ext_info() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataReadAck.ext_info)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return ext_info_ != NULL ? *ext_info_ : *default_instance().ext_info_;
#else
  return ext_info_ != NULL ? *ext_info_ : *default_instance_->ext_info_;
#endif
}
inline ::IM::BaseDefine::ExtInfo* IMMsgDataReadAck::mutable_ext_info() {
  set_has_ext_info();
  if (ext_info_ == NULL) ext_info_ = new ::IM::BaseDefine::ExtInfo;
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgDataReadAck.ext_info)
  return ext_info_;
}
inline ::IM::BaseDefine::ExtInfo* IMMsgDataReadAck::release_ext_info() {
  clear_has_ext_info();
  ::IM::BaseDefine::ExtInfo* temp = ext_info_;
  ext_info_ = NULL;
  return temp;
}
inline void IMMsgDataReadAck::set_allocated_ext_info(::IM::BaseDefine::ExtInfo* ext_info) {
  delete ext_info_;
  ext_info_ = ext_info;
  if (ext_info) {
    set_has_ext_info();
  } else {
    clear_has_ext_info();
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsgDataReadAck.ext_info)
}

// optional uint32 domain_id = 7 [default = 1000];
inline bool IMMsgDataReadAck::has_domain_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IMMsgDataReadAck::set_has_domain_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IMMsgDataReadAck::clear_has_domain_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IMMsgDataReadAck::clear_domain_id() {
  domain_id_ = 1000u;
  clear_has_domain_id();
}
inline ::google::protobuf::uint32 IMMsgDataReadAck::domain_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataReadAck.domain_id)
  return domain_id_;
}
inline void IMMsgDataReadAck::set_domain_id(::google::protobuf::uint32 value) {
  set_has_domain_id();
  domain_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataReadAck.domain_id)
}

// -------------------------------------------------------------------

// IMMsgDataReadNotify

// required uint64 user_id = 1;
inline bool IMMsgDataReadNotify::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMMsgDataReadNotify::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMMsgDataReadNotify::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMMsgDataReadNotify::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 IMMsgDataReadNotify::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataReadNotify.user_id)
  return user_id_;
}
inline void IMMsgDataReadNotify::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataReadNotify.user_id)
}

// required uint64 session_id = 2;
inline bool IMMsgDataReadNotify::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMMsgDataReadNotify::set_has_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMMsgDataReadNotify::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMMsgDataReadNotify::clear_session_id() {
  session_id_ = GOOGLE_ULONGLONG(0);
  clear_has_session_id();
}
inline ::google::protobuf::uint64 IMMsgDataReadNotify::session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataReadNotify.session_id)
  return session_id_;
}
inline void IMMsgDataReadNotify::set_session_id(::google::protobuf::uint64 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataReadNotify.session_id)
}

// required uint32 msg_id = 3;
inline bool IMMsgDataReadNotify::has_msg_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMMsgDataReadNotify::set_has_msg_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMMsgDataReadNotify::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMMsgDataReadNotify::clear_msg_id() {
  msg_id_ = 0u;
  clear_has_msg_id();
}
inline ::google::protobuf::uint32 IMMsgDataReadNotify::msg_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataReadNotify.msg_id)
  return msg_id_;
}
inline void IMMsgDataReadNotify::set_msg_id(::google::protobuf::uint32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataReadNotify.msg_id)
}

// required .IM.BaseDefine.SessionType session_type = 4;
inline bool IMMsgDataReadNotify::has_session_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMMsgDataReadNotify::set_has_session_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMMsgDataReadNotify::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMMsgDataReadNotify::clear_session_type() {
  session_type_ = 0;
  clear_has_session_type();
}
inline ::IM::BaseDefine::SessionType IMMsgDataReadNotify::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataReadNotify.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMMsgDataReadNotify::set_session_type(::IM::BaseDefine::SessionType value) {
  assert(::IM::BaseDefine::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataReadNotify.session_type)
}

// optional uint64 msg_item = 5;
inline bool IMMsgDataReadNotify::has_msg_item() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMMsgDataReadNotify::set_has_msg_item() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMMsgDataReadNotify::clear_has_msg_item() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMMsgDataReadNotify::clear_msg_item() {
  msg_item_ = GOOGLE_ULONGLONG(0);
  clear_has_msg_item();
}
inline ::google::protobuf::uint64 IMMsgDataReadNotify::msg_item() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataReadNotify.msg_item)
  return msg_item_;
}
inline void IMMsgDataReadNotify::set_msg_item(::google::protobuf::uint64 value) {
  set_has_msg_item();
  msg_item_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataReadNotify.msg_item)
}

// optional .IM.BaseDefine.ExtInfo ext_info = 6;
inline bool IMMsgDataReadNotify::has_ext_info() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IMMsgDataReadNotify::set_has_ext_info() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IMMsgDataReadNotify::clear_has_ext_info() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IMMsgDataReadNotify::clear_ext_info() {
  if (ext_info_ != NULL) ext_info_->::IM::BaseDefine::ExtInfo::Clear();
  clear_has_ext_info();
}
inline const ::IM::BaseDefine::ExtInfo& IMMsgDataReadNotify::ext_info() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataReadNotify.ext_info)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return ext_info_ != NULL ? *ext_info_ : *default_instance().ext_info_;
#else
  return ext_info_ != NULL ? *ext_info_ : *default_instance_->ext_info_;
#endif
}
inline ::IM::BaseDefine::ExtInfo* IMMsgDataReadNotify::mutable_ext_info() {
  set_has_ext_info();
  if (ext_info_ == NULL) ext_info_ = new ::IM::BaseDefine::ExtInfo;
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgDataReadNotify.ext_info)
  return ext_info_;
}
inline ::IM::BaseDefine::ExtInfo* IMMsgDataReadNotify::release_ext_info() {
  clear_has_ext_info();
  ::IM::BaseDefine::ExtInfo* temp = ext_info_;
  ext_info_ = NULL;
  return temp;
}
inline void IMMsgDataReadNotify::set_allocated_ext_info(::IM::BaseDefine::ExtInfo* ext_info) {
  delete ext_info_;
  ext_info_ = ext_info;
  if (ext_info) {
    set_has_ext_info();
  } else {
    clear_has_ext_info();
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsgDataReadNotify.ext_info)
}

// -------------------------------------------------------------------

// IMMsgJoinNotify

// required uint64 user_id = 1;
inline bool IMMsgJoinNotify::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMMsgJoinNotify::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMMsgJoinNotify::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMMsgJoinNotify::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 IMMsgJoinNotify::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgJoinNotify.user_id)
  return user_id_;
}
inline void IMMsgJoinNotify::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgJoinNotify.user_id)
}

// required .IM.BaseDefine.SessionType session_type = 2;
inline bool IMMsgJoinNotify::has_session_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMMsgJoinNotify::set_has_session_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMMsgJoinNotify::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMMsgJoinNotify::clear_session_type() {
  session_type_ = 0;
  clear_has_session_type();
}
inline ::IM::BaseDefine::SessionType IMMsgJoinNotify::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgJoinNotify.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMMsgJoinNotify::set_session_type(::IM::BaseDefine::SessionType value) {
  assert(::IM::BaseDefine::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgJoinNotify.session_type)
}

// required uint32 app_id = 3;
inline bool IMMsgJoinNotify::has_app_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMMsgJoinNotify::set_has_app_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMMsgJoinNotify::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMMsgJoinNotify::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 IMMsgJoinNotify::app_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgJoinNotify.app_id)
  return app_id_;
}
inline void IMMsgJoinNotify::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgJoinNotify.app_id)
}

// optional uint32 domain_id = 4;
inline bool IMMsgJoinNotify::has_domain_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMMsgJoinNotify::set_has_domain_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMMsgJoinNotify::clear_has_domain_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMMsgJoinNotify::clear_domain_id() {
  domain_id_ = 0u;
  clear_has_domain_id();
}
inline ::google::protobuf::uint32 IMMsgJoinNotify::domain_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgJoinNotify.domain_id)
  return domain_id_;
}
inline void IMMsgJoinNotify::set_domain_id(::google::protobuf::uint32 value) {
  set_has_domain_id();
  domain_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgJoinNotify.domain_id)
}

// optional uint64 session_id = 5;
inline bool IMMsgJoinNotify::has_session_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMMsgJoinNotify::set_has_session_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMMsgJoinNotify::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMMsgJoinNotify::clear_session_id() {
  session_id_ = GOOGLE_ULONGLONG(0);
  clear_has_session_id();
}
inline ::google::protobuf::uint64 IMMsgJoinNotify::session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgJoinNotify.session_id)
  return session_id_;
}
inline void IMMsgJoinNotify::set_session_id(::google::protobuf::uint64 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgJoinNotify.session_id)
}

// -------------------------------------------------------------------

// IMClientTimeReq

// -------------------------------------------------------------------

// IMClientTimeRsp

// required uint32 server_time = 1;
inline bool IMClientTimeRsp::has_server_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMClientTimeRsp::set_has_server_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMClientTimeRsp::clear_has_server_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMClientTimeRsp::clear_server_time() {
  server_time_ = 0u;
  clear_has_server_time();
}
inline ::google::protobuf::uint32 IMClientTimeRsp::server_time() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMClientTimeRsp.server_time)
  return server_time_;
}
inline void IMClientTimeRsp::set_server_time(::google::protobuf::uint32 value) {
  set_has_server_time();
  server_time_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMClientTimeRsp.server_time)
}

// -------------------------------------------------------------------

// IMUnreadMsgCntReq

// required uint64 user_id = 1;
inline bool IMUnreadMsgCntReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMUnreadMsgCntReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMUnreadMsgCntReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMUnreadMsgCntReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 IMUnreadMsgCntReq::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadMsgCntReq.user_id)
  return user_id_;
}
inline void IMUnreadMsgCntReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMUnreadMsgCntReq.user_id)
}

// optional bytes attach_data = 20;
inline bool IMUnreadMsgCntReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMUnreadMsgCntReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMUnreadMsgCntReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMUnreadMsgCntReq::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMUnreadMsgCntReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadMsgCntReq.attach_data)
  return *attach_data_;
}
inline void IMUnreadMsgCntReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMUnreadMsgCntReq.attach_data)
}
inline void IMUnreadMsgCntReq::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMUnreadMsgCntReq.attach_data)
}
inline void IMUnreadMsgCntReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMUnreadMsgCntReq.attach_data)
}
inline ::std::string* IMUnreadMsgCntReq::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMUnreadMsgCntReq.attach_data)
  return attach_data_;
}
inline ::std::string* IMUnreadMsgCntReq::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMUnreadMsgCntReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMUnreadMsgCntReq.attach_data)
}

// optional uint32 domain_id = 21 [default = 1000];
inline bool IMUnreadMsgCntReq::has_domain_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMUnreadMsgCntReq::set_has_domain_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMUnreadMsgCntReq::clear_has_domain_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMUnreadMsgCntReq::clear_domain_id() {
  domain_id_ = 1000u;
  clear_has_domain_id();
}
inline ::google::protobuf::uint32 IMUnreadMsgCntReq::domain_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadMsgCntReq.domain_id)
  return domain_id_;
}
inline void IMUnreadMsgCntReq::set_domain_id(::google::protobuf::uint32 value) {
  set_has_domain_id();
  domain_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMUnreadMsgCntReq.domain_id)
}

// -------------------------------------------------------------------

// IMUnreadMsgCntReqInner

// required uint32 app_id = 1;
inline bool IMUnreadMsgCntReqInner::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMUnreadMsgCntReqInner::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMUnreadMsgCntReqInner::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMUnreadMsgCntReqInner::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 IMUnreadMsgCntReqInner::app_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadMsgCntReqInner.app_id)
  return app_id_;
}
inline void IMUnreadMsgCntReqInner::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMUnreadMsgCntReqInner.app_id)
}

// required .IM.Message.IMUnreadMsgCntReq unread_msgCntReq = 2;
inline bool IMUnreadMsgCntReqInner::has_unread_msgcntreq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMUnreadMsgCntReqInner::set_has_unread_msgcntreq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMUnreadMsgCntReqInner::clear_has_unread_msgcntreq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMUnreadMsgCntReqInner::clear_unread_msgcntreq() {
  if (unread_msgcntreq_ != NULL) unread_msgcntreq_->::IM::Message::IMUnreadMsgCntReq::Clear();
  clear_has_unread_msgcntreq();
}
inline const ::IM::Message::IMUnreadMsgCntReq& IMUnreadMsgCntReqInner::unread_msgcntreq() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadMsgCntReqInner.unread_msgCntReq)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return unread_msgcntreq_ != NULL ? *unread_msgcntreq_ : *default_instance().unread_msgcntreq_;
#else
  return unread_msgcntreq_ != NULL ? *unread_msgcntreq_ : *default_instance_->unread_msgcntreq_;
#endif
}
inline ::IM::Message::IMUnreadMsgCntReq* IMUnreadMsgCntReqInner::mutable_unread_msgcntreq() {
  set_has_unread_msgcntreq();
  if (unread_msgcntreq_ == NULL) unread_msgcntreq_ = new ::IM::Message::IMUnreadMsgCntReq;
  // @@protoc_insertion_point(field_mutable:IM.Message.IMUnreadMsgCntReqInner.unread_msgCntReq)
  return unread_msgcntreq_;
}
inline ::IM::Message::IMUnreadMsgCntReq* IMUnreadMsgCntReqInner::release_unread_msgcntreq() {
  clear_has_unread_msgcntreq();
  ::IM::Message::IMUnreadMsgCntReq* temp = unread_msgcntreq_;
  unread_msgcntreq_ = NULL;
  return temp;
}
inline void IMUnreadMsgCntReqInner::set_allocated_unread_msgcntreq(::IM::Message::IMUnreadMsgCntReq* unread_msgcntreq) {
  delete unread_msgcntreq_;
  unread_msgcntreq_ = unread_msgcntreq;
  if (unread_msgcntreq) {
    set_has_unread_msgcntreq();
  } else {
    clear_has_unread_msgcntreq();
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMUnreadMsgCntReqInner.unread_msgCntReq)
}

// -------------------------------------------------------------------

// IMUnreadMsgCntRsp

// required uint64 user_id = 1;
inline bool IMUnreadMsgCntRsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMUnreadMsgCntRsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMUnreadMsgCntRsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMUnreadMsgCntRsp::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 IMUnreadMsgCntRsp::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadMsgCntRsp.user_id)
  return user_id_;
}
inline void IMUnreadMsgCntRsp::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMUnreadMsgCntRsp.user_id)
}

// required uint32 total_cnt = 2;
inline bool IMUnreadMsgCntRsp::has_total_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMUnreadMsgCntRsp::set_has_total_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMUnreadMsgCntRsp::clear_has_total_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMUnreadMsgCntRsp::clear_total_cnt() {
  total_cnt_ = 0u;
  clear_has_total_cnt();
}
inline ::google::protobuf::uint32 IMUnreadMsgCntRsp::total_cnt() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadMsgCntRsp.total_cnt)
  return total_cnt_;
}
inline void IMUnreadMsgCntRsp::set_total_cnt(::google::protobuf::uint32 value) {
  set_has_total_cnt();
  total_cnt_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMUnreadMsgCntRsp.total_cnt)
}

// repeated .IM.BaseDefine.UnreadInfo unreadinfo_list = 3;
inline int IMUnreadMsgCntRsp::unreadinfo_list_size() const {
  return unreadinfo_list_.size();
}
inline void IMUnreadMsgCntRsp::clear_unreadinfo_list() {
  unreadinfo_list_.Clear();
}
inline const ::IM::BaseDefine::UnreadInfo& IMUnreadMsgCntRsp::unreadinfo_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadMsgCntRsp.unreadinfo_list)
  return unreadinfo_list_.Get(index);
}
inline ::IM::BaseDefine::UnreadInfo* IMUnreadMsgCntRsp::mutable_unreadinfo_list(int index) {
  // @@protoc_insertion_point(field_mutable:IM.Message.IMUnreadMsgCntRsp.unreadinfo_list)
  return unreadinfo_list_.Mutable(index);
}
inline ::IM::BaseDefine::UnreadInfo* IMUnreadMsgCntRsp::add_unreadinfo_list() {
  // @@protoc_insertion_point(field_add:IM.Message.IMUnreadMsgCntRsp.unreadinfo_list)
  return unreadinfo_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UnreadInfo >&
IMUnreadMsgCntRsp::unreadinfo_list() const {
  // @@protoc_insertion_point(field_list:IM.Message.IMUnreadMsgCntRsp.unreadinfo_list)
  return unreadinfo_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UnreadInfo >*
IMUnreadMsgCntRsp::mutable_unreadinfo_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Message.IMUnreadMsgCntRsp.unreadinfo_list)
  return &unreadinfo_list_;
}

// optional bytes attach_data = 20;
inline bool IMUnreadMsgCntRsp::has_attach_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMUnreadMsgCntRsp::set_has_attach_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMUnreadMsgCntRsp::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMUnreadMsgCntRsp::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMUnreadMsgCntRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadMsgCntRsp.attach_data)
  return *attach_data_;
}
inline void IMUnreadMsgCntRsp::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMUnreadMsgCntRsp.attach_data)
}
inline void IMUnreadMsgCntRsp::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMUnreadMsgCntRsp.attach_data)
}
inline void IMUnreadMsgCntRsp::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMUnreadMsgCntRsp.attach_data)
}
inline ::std::string* IMUnreadMsgCntRsp::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMUnreadMsgCntRsp.attach_data)
  return attach_data_;
}
inline ::std::string* IMUnreadMsgCntRsp::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMUnreadMsgCntRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMUnreadMsgCntRsp.attach_data)
}

// -------------------------------------------------------------------

// IMUnreadAndRecentSessionReq

// required uint64 user_id = 1;
inline bool IMUnreadAndRecentSessionReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMUnreadAndRecentSessionReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMUnreadAndRecentSessionReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMUnreadAndRecentSessionReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 IMUnreadAndRecentSessionReq::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadAndRecentSessionReq.user_id)
  return user_id_;
}
inline void IMUnreadAndRecentSessionReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMUnreadAndRecentSessionReq.user_id)
}

// optional bytes attach_data = 20;
inline bool IMUnreadAndRecentSessionReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMUnreadAndRecentSessionReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMUnreadAndRecentSessionReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMUnreadAndRecentSessionReq::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMUnreadAndRecentSessionReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadAndRecentSessionReq.attach_data)
  return *attach_data_;
}
inline void IMUnreadAndRecentSessionReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMUnreadAndRecentSessionReq.attach_data)
}
inline void IMUnreadAndRecentSessionReq::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMUnreadAndRecentSessionReq.attach_data)
}
inline void IMUnreadAndRecentSessionReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMUnreadAndRecentSessionReq.attach_data)
}
inline ::std::string* IMUnreadAndRecentSessionReq::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMUnreadAndRecentSessionReq.attach_data)
  return attach_data_;
}
inline ::std::string* IMUnreadAndRecentSessionReq::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMUnreadAndRecentSessionReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMUnreadAndRecentSessionReq.attach_data)
}

// optional uint32 domain_id = 21 [default = 1000];
inline bool IMUnreadAndRecentSessionReq::has_domain_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMUnreadAndRecentSessionReq::set_has_domain_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMUnreadAndRecentSessionReq::clear_has_domain_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMUnreadAndRecentSessionReq::clear_domain_id() {
  domain_id_ = 1000u;
  clear_has_domain_id();
}
inline ::google::protobuf::uint32 IMUnreadAndRecentSessionReq::domain_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadAndRecentSessionReq.domain_id)
  return domain_id_;
}
inline void IMUnreadAndRecentSessionReq::set_domain_id(::google::protobuf::uint32 value) {
  set_has_domain_id();
  domain_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMUnreadAndRecentSessionReq.domain_id)
}

// -------------------------------------------------------------------

// IMUnreadAndRecentSessionReqInner

// required uint32 app_id = 1;
inline bool IMUnreadAndRecentSessionReqInner::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMUnreadAndRecentSessionReqInner::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMUnreadAndRecentSessionReqInner::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMUnreadAndRecentSessionReqInner::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 IMUnreadAndRecentSessionReqInner::app_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadAndRecentSessionReqInner.app_id)
  return app_id_;
}
inline void IMUnreadAndRecentSessionReqInner::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMUnreadAndRecentSessionReqInner.app_id)
}

// required .IM.Message.IMUnreadAndRecentSessionReq unread_recent_session_req = 2;
inline bool IMUnreadAndRecentSessionReqInner::has_unread_recent_session_req() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMUnreadAndRecentSessionReqInner::set_has_unread_recent_session_req() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMUnreadAndRecentSessionReqInner::clear_has_unread_recent_session_req() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMUnreadAndRecentSessionReqInner::clear_unread_recent_session_req() {
  if (unread_recent_session_req_ != NULL) unread_recent_session_req_->::IM::Message::IMUnreadAndRecentSessionReq::Clear();
  clear_has_unread_recent_session_req();
}
inline const ::IM::Message::IMUnreadAndRecentSessionReq& IMUnreadAndRecentSessionReqInner::unread_recent_session_req() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadAndRecentSessionReqInner.unread_recent_session_req)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return unread_recent_session_req_ != NULL ? *unread_recent_session_req_ : *default_instance().unread_recent_session_req_;
#else
  return unread_recent_session_req_ != NULL ? *unread_recent_session_req_ : *default_instance_->unread_recent_session_req_;
#endif
}
inline ::IM::Message::IMUnreadAndRecentSessionReq* IMUnreadAndRecentSessionReqInner::mutable_unread_recent_session_req() {
  set_has_unread_recent_session_req();
  if (unread_recent_session_req_ == NULL) unread_recent_session_req_ = new ::IM::Message::IMUnreadAndRecentSessionReq;
  // @@protoc_insertion_point(field_mutable:IM.Message.IMUnreadAndRecentSessionReqInner.unread_recent_session_req)
  return unread_recent_session_req_;
}
inline ::IM::Message::IMUnreadAndRecentSessionReq* IMUnreadAndRecentSessionReqInner::release_unread_recent_session_req() {
  clear_has_unread_recent_session_req();
  ::IM::Message::IMUnreadAndRecentSessionReq* temp = unread_recent_session_req_;
  unread_recent_session_req_ = NULL;
  return temp;
}
inline void IMUnreadAndRecentSessionReqInner::set_allocated_unread_recent_session_req(::IM::Message::IMUnreadAndRecentSessionReq* unread_recent_session_req) {
  delete unread_recent_session_req_;
  unread_recent_session_req_ = unread_recent_session_req;
  if (unread_recent_session_req) {
    set_has_unread_recent_session_req();
  } else {
    clear_has_unread_recent_session_req();
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMUnreadAndRecentSessionReqInner.unread_recent_session_req)
}

// -------------------------------------------------------------------

// IMUnreadAndRecentSessionRsp

// required uint64 user_id = 1;
inline bool IMUnreadAndRecentSessionRsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMUnreadAndRecentSessionRsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMUnreadAndRecentSessionRsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMUnreadAndRecentSessionRsp::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 IMUnreadAndRecentSessionRsp::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadAndRecentSessionRsp.user_id)
  return user_id_;
}
inline void IMUnreadAndRecentSessionRsp::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMUnreadAndRecentSessionRsp.user_id)
}

// required uint32 total_unread_cnt = 2;
inline bool IMUnreadAndRecentSessionRsp::has_total_unread_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMUnreadAndRecentSessionRsp::set_has_total_unread_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMUnreadAndRecentSessionRsp::clear_has_total_unread_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMUnreadAndRecentSessionRsp::clear_total_unread_cnt() {
  total_unread_cnt_ = 0u;
  clear_has_total_unread_cnt();
}
inline ::google::protobuf::uint32 IMUnreadAndRecentSessionRsp::total_unread_cnt() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadAndRecentSessionRsp.total_unread_cnt)
  return total_unread_cnt_;
}
inline void IMUnreadAndRecentSessionRsp::set_total_unread_cnt(::google::protobuf::uint32 value) {
  set_has_total_unread_cnt();
  total_unread_cnt_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMUnreadAndRecentSessionRsp.total_unread_cnt)
}

// repeated .IM.BaseDefine.ContactListInfo contact_list = 3;
inline int IMUnreadAndRecentSessionRsp::contact_list_size() const {
  return contact_list_.size();
}
inline void IMUnreadAndRecentSessionRsp::clear_contact_list() {
  contact_list_.Clear();
}
inline const ::IM::BaseDefine::ContactListInfo& IMUnreadAndRecentSessionRsp::contact_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadAndRecentSessionRsp.contact_list)
  return contact_list_.Get(index);
}
inline ::IM::BaseDefine::ContactListInfo* IMUnreadAndRecentSessionRsp::mutable_contact_list(int index) {
  // @@protoc_insertion_point(field_mutable:IM.Message.IMUnreadAndRecentSessionRsp.contact_list)
  return contact_list_.Mutable(index);
}
inline ::IM::BaseDefine::ContactListInfo* IMUnreadAndRecentSessionRsp::add_contact_list() {
  // @@protoc_insertion_point(field_add:IM.Message.IMUnreadAndRecentSessionRsp.contact_list)
  return contact_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::ContactListInfo >&
IMUnreadAndRecentSessionRsp::contact_list() const {
  // @@protoc_insertion_point(field_list:IM.Message.IMUnreadAndRecentSessionRsp.contact_list)
  return contact_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::ContactListInfo >*
IMUnreadAndRecentSessionRsp::mutable_contact_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Message.IMUnreadAndRecentSessionRsp.contact_list)
  return &contact_list_;
}

// optional bytes attach_data = 20;
inline bool IMUnreadAndRecentSessionRsp::has_attach_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMUnreadAndRecentSessionRsp::set_has_attach_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMUnreadAndRecentSessionRsp::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMUnreadAndRecentSessionRsp::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMUnreadAndRecentSessionRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadAndRecentSessionRsp.attach_data)
  return *attach_data_;
}
inline void IMUnreadAndRecentSessionRsp::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMUnreadAndRecentSessionRsp.attach_data)
}
inline void IMUnreadAndRecentSessionRsp::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMUnreadAndRecentSessionRsp.attach_data)
}
inline void IMUnreadAndRecentSessionRsp::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMUnreadAndRecentSessionRsp.attach_data)
}
inline ::std::string* IMUnreadAndRecentSessionRsp::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMUnreadAndRecentSessionRsp.attach_data)
  return attach_data_;
}
inline ::std::string* IMUnreadAndRecentSessionRsp::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMUnreadAndRecentSessionRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMUnreadAndRecentSessionRsp.attach_data)
}

// -------------------------------------------------------------------

// IMGetMsgListReq

// required uint64 user_id = 1;
inline bool IMGetMsgListReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMGetMsgListReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMGetMsgListReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMGetMsgListReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 IMGetMsgListReq::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListReq.user_id)
  return user_id_;
}
inline void IMGetMsgListReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListReq.user_id)
}

// required .IM.BaseDefine.SessionType session_type = 2;
inline bool IMGetMsgListReq::has_session_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMGetMsgListReq::set_has_session_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMGetMsgListReq::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMGetMsgListReq::clear_session_type() {
  session_type_ = 0;
  clear_has_session_type();
}
inline ::IM::BaseDefine::SessionType IMGetMsgListReq::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListReq.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMGetMsgListReq::set_session_type(::IM::BaseDefine::SessionType value) {
  assert(::IM::BaseDefine::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListReq.session_type)
}

// required uint64 session_id = 3;
inline bool IMGetMsgListReq::has_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMGetMsgListReq::set_has_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMGetMsgListReq::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMGetMsgListReq::clear_session_id() {
  session_id_ = GOOGLE_ULONGLONG(0);
  clear_has_session_id();
}
inline ::google::protobuf::uint64 IMGetMsgListReq::session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListReq.session_id)
  return session_id_;
}
inline void IMGetMsgListReq::set_session_id(::google::protobuf::uint64 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListReq.session_id)
}

// required uint32 msg_id_begin = 4;
inline bool IMGetMsgListReq::has_msg_id_begin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMGetMsgListReq::set_has_msg_id_begin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMGetMsgListReq::clear_has_msg_id_begin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMGetMsgListReq::clear_msg_id_begin() {
  msg_id_begin_ = 0u;
  clear_has_msg_id_begin();
}
inline ::google::protobuf::uint32 IMGetMsgListReq::msg_id_begin() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListReq.msg_id_begin)
  return msg_id_begin_;
}
inline void IMGetMsgListReq::set_msg_id_begin(::google::protobuf::uint32 value) {
  set_has_msg_id_begin();
  msg_id_begin_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListReq.msg_id_begin)
}

// required uint32 msg_cnt = 5;
inline bool IMGetMsgListReq::has_msg_cnt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMGetMsgListReq::set_has_msg_cnt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMGetMsgListReq::clear_has_msg_cnt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMGetMsgListReq::clear_msg_cnt() {
  msg_cnt_ = 0u;
  clear_has_msg_cnt();
}
inline ::google::protobuf::uint32 IMGetMsgListReq::msg_cnt() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListReq.msg_cnt)
  return msg_cnt_;
}
inline void IMGetMsgListReq::set_msg_cnt(::google::protobuf::uint32 value) {
  set_has_msg_cnt();
  msg_cnt_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListReq.msg_cnt)
}

// optional uint64 msg_item = 6;
inline bool IMGetMsgListReq::has_msg_item() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IMGetMsgListReq::set_has_msg_item() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IMGetMsgListReq::clear_has_msg_item() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IMGetMsgListReq::clear_msg_item() {
  msg_item_ = GOOGLE_ULONGLONG(0);
  clear_has_msg_item();
}
inline ::google::protobuf::uint64 IMGetMsgListReq::msg_item() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListReq.msg_item)
  return msg_item_;
}
inline void IMGetMsgListReq::set_msg_item(::google::protobuf::uint64 value) {
  set_has_msg_item();
  msg_item_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListReq.msg_item)
}

// optional bytes attach_data = 20;
inline bool IMGetMsgListReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IMGetMsgListReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IMGetMsgListReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IMGetMsgListReq::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMGetMsgListReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListReq.attach_data)
  return *attach_data_;
}
inline void IMGetMsgListReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListReq.attach_data)
}
inline void IMGetMsgListReq::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGetMsgListReq.attach_data)
}
inline void IMGetMsgListReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGetMsgListReq.attach_data)
}
inline ::std::string* IMGetMsgListReq::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgListReq.attach_data)
  return attach_data_;
}
inline ::std::string* IMGetMsgListReq::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMGetMsgListReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetMsgListReq.attach_data)
}

// optional .IM.BaseDefine.ExtInfo ext_info = 21;
inline bool IMGetMsgListReq::has_ext_info() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IMGetMsgListReq::set_has_ext_info() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IMGetMsgListReq::clear_has_ext_info() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IMGetMsgListReq::clear_ext_info() {
  if (ext_info_ != NULL) ext_info_->::IM::BaseDefine::ExtInfo::Clear();
  clear_has_ext_info();
}
inline const ::IM::BaseDefine::ExtInfo& IMGetMsgListReq::ext_info() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListReq.ext_info)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return ext_info_ != NULL ? *ext_info_ : *default_instance().ext_info_;
#else
  return ext_info_ != NULL ? *ext_info_ : *default_instance_->ext_info_;
#endif
}
inline ::IM::BaseDefine::ExtInfo* IMGetMsgListReq::mutable_ext_info() {
  set_has_ext_info();
  if (ext_info_ == NULL) ext_info_ = new ::IM::BaseDefine::ExtInfo;
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgListReq.ext_info)
  return ext_info_;
}
inline ::IM::BaseDefine::ExtInfo* IMGetMsgListReq::release_ext_info() {
  clear_has_ext_info();
  ::IM::BaseDefine::ExtInfo* temp = ext_info_;
  ext_info_ = NULL;
  return temp;
}
inline void IMGetMsgListReq::set_allocated_ext_info(::IM::BaseDefine::ExtInfo* ext_info) {
  delete ext_info_;
  ext_info_ = ext_info;
  if (ext_info) {
    set_has_ext_info();
  } else {
    clear_has_ext_info();
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetMsgListReq.ext_info)
}

// optional uint32 domain_id = 22 [default = 1000];
inline bool IMGetMsgListReq::has_domain_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void IMGetMsgListReq::set_has_domain_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void IMGetMsgListReq::clear_has_domain_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void IMGetMsgListReq::clear_domain_id() {
  domain_id_ = 1000u;
  clear_has_domain_id();
}
inline ::google::protobuf::uint32 IMGetMsgListReq::domain_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListReq.domain_id)
  return domain_id_;
}
inline void IMGetMsgListReq::set_domain_id(::google::protobuf::uint32 value) {
  set_has_domain_id();
  domain_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListReq.domain_id)
}

// -------------------------------------------------------------------

// IMGetMsgListRsp

// required uint64 user_id = 1;
inline bool IMGetMsgListRsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMGetMsgListRsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMGetMsgListRsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMGetMsgListRsp::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 IMGetMsgListRsp::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListRsp.user_id)
  return user_id_;
}
inline void IMGetMsgListRsp::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListRsp.user_id)
}

// required .IM.BaseDefine.SessionType session_type = 2;
inline bool IMGetMsgListRsp::has_session_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMGetMsgListRsp::set_has_session_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMGetMsgListRsp::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMGetMsgListRsp::clear_session_type() {
  session_type_ = 0;
  clear_has_session_type();
}
inline ::IM::BaseDefine::SessionType IMGetMsgListRsp::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListRsp.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMGetMsgListRsp::set_session_type(::IM::BaseDefine::SessionType value) {
  assert(::IM::BaseDefine::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListRsp.session_type)
}

// required uint64 session_id = 3;
inline bool IMGetMsgListRsp::has_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMGetMsgListRsp::set_has_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMGetMsgListRsp::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMGetMsgListRsp::clear_session_id() {
  session_id_ = GOOGLE_ULONGLONG(0);
  clear_has_session_id();
}
inline ::google::protobuf::uint64 IMGetMsgListRsp::session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListRsp.session_id)
  return session_id_;
}
inline void IMGetMsgListRsp::set_session_id(::google::protobuf::uint64 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListRsp.session_id)
}

// required uint32 msg_id_begin = 4;
inline bool IMGetMsgListRsp::has_msg_id_begin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMGetMsgListRsp::set_has_msg_id_begin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMGetMsgListRsp::clear_has_msg_id_begin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMGetMsgListRsp::clear_msg_id_begin() {
  msg_id_begin_ = 0u;
  clear_has_msg_id_begin();
}
inline ::google::protobuf::uint32 IMGetMsgListRsp::msg_id_begin() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListRsp.msg_id_begin)
  return msg_id_begin_;
}
inline void IMGetMsgListRsp::set_msg_id_begin(::google::protobuf::uint32 value) {
  set_has_msg_id_begin();
  msg_id_begin_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListRsp.msg_id_begin)
}

// repeated .IM.BaseDefine.MsgInfo msg_list = 5;
inline int IMGetMsgListRsp::msg_list_size() const {
  return msg_list_.size();
}
inline void IMGetMsgListRsp::clear_msg_list() {
  msg_list_.Clear();
}
inline const ::IM::BaseDefine::MsgInfo& IMGetMsgListRsp::msg_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListRsp.msg_list)
  return msg_list_.Get(index);
}
inline ::IM::BaseDefine::MsgInfo* IMGetMsgListRsp::mutable_msg_list(int index) {
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgListRsp.msg_list)
  return msg_list_.Mutable(index);
}
inline ::IM::BaseDefine::MsgInfo* IMGetMsgListRsp::add_msg_list() {
  // @@protoc_insertion_point(field_add:IM.Message.IMGetMsgListRsp.msg_list)
  return msg_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgInfo >&
IMGetMsgListRsp::msg_list() const {
  // @@protoc_insertion_point(field_list:IM.Message.IMGetMsgListRsp.msg_list)
  return msg_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgInfo >*
IMGetMsgListRsp::mutable_msg_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Message.IMGetMsgListRsp.msg_list)
  return &msg_list_;
}

// optional uint64 msg_item = 6;
inline bool IMGetMsgListRsp::has_msg_item() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IMGetMsgListRsp::set_has_msg_item() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IMGetMsgListRsp::clear_has_msg_item() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IMGetMsgListRsp::clear_msg_item() {
  msg_item_ = GOOGLE_ULONGLONG(0);
  clear_has_msg_item();
}
inline ::google::protobuf::uint64 IMGetMsgListRsp::msg_item() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListRsp.msg_item)
  return msg_item_;
}
inline void IMGetMsgListRsp::set_msg_item(::google::protobuf::uint64 value) {
  set_has_msg_item();
  msg_item_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListRsp.msg_item)
}

// optional bytes attach_data = 20;
inline bool IMGetMsgListRsp::has_attach_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IMGetMsgListRsp::set_has_attach_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IMGetMsgListRsp::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IMGetMsgListRsp::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMGetMsgListRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListRsp.attach_data)
  return *attach_data_;
}
inline void IMGetMsgListRsp::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListRsp.attach_data)
}
inline void IMGetMsgListRsp::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGetMsgListRsp.attach_data)
}
inline void IMGetMsgListRsp::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGetMsgListRsp.attach_data)
}
inline ::std::string* IMGetMsgListRsp::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgListRsp.attach_data)
  return attach_data_;
}
inline ::std::string* IMGetMsgListRsp::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMGetMsgListRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetMsgListRsp.attach_data)
}

// optional .IM.BaseDefine.ExtInfo ext_info = 21;
inline bool IMGetMsgListRsp::has_ext_info() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IMGetMsgListRsp::set_has_ext_info() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IMGetMsgListRsp::clear_has_ext_info() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IMGetMsgListRsp::clear_ext_info() {
  if (ext_info_ != NULL) ext_info_->::IM::BaseDefine::ExtInfo::Clear();
  clear_has_ext_info();
}
inline const ::IM::BaseDefine::ExtInfo& IMGetMsgListRsp::ext_info() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListRsp.ext_info)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return ext_info_ != NULL ? *ext_info_ : *default_instance().ext_info_;
#else
  return ext_info_ != NULL ? *ext_info_ : *default_instance_->ext_info_;
#endif
}
inline ::IM::BaseDefine::ExtInfo* IMGetMsgListRsp::mutable_ext_info() {
  set_has_ext_info();
  if (ext_info_ == NULL) ext_info_ = new ::IM::BaseDefine::ExtInfo;
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgListRsp.ext_info)
  return ext_info_;
}
inline ::IM::BaseDefine::ExtInfo* IMGetMsgListRsp::release_ext_info() {
  clear_has_ext_info();
  ::IM::BaseDefine::ExtInfo* temp = ext_info_;
  ext_info_ = NULL;
  return temp;
}
inline void IMGetMsgListRsp::set_allocated_ext_info(::IM::BaseDefine::ExtInfo* ext_info) {
  delete ext_info_;
  ext_info_ = ext_info;
  if (ext_info) {
    set_has_ext_info();
  } else {
    clear_has_ext_info();
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetMsgListRsp.ext_info)
}

// -------------------------------------------------------------------

// IMGetLatestMsgIdReq

// required uint64 user_id = 1;
inline bool IMGetLatestMsgIdReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMGetLatestMsgIdReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMGetLatestMsgIdReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMGetLatestMsgIdReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 IMGetLatestMsgIdReq::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdReq.user_id)
  return user_id_;
}
inline void IMGetLatestMsgIdReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdReq.user_id)
}

// required .IM.BaseDefine.SessionType session_type = 2;
inline bool IMGetLatestMsgIdReq::has_session_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMGetLatestMsgIdReq::set_has_session_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMGetLatestMsgIdReq::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMGetLatestMsgIdReq::clear_session_type() {
  session_type_ = 0;
  clear_has_session_type();
}
inline ::IM::BaseDefine::SessionType IMGetLatestMsgIdReq::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdReq.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMGetLatestMsgIdReq::set_session_type(::IM::BaseDefine::SessionType value) {
  assert(::IM::BaseDefine::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdReq.session_type)
}

// required uint64 session_id = 3;
inline bool IMGetLatestMsgIdReq::has_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMGetLatestMsgIdReq::set_has_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMGetLatestMsgIdReq::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMGetLatestMsgIdReq::clear_session_id() {
  session_id_ = GOOGLE_ULONGLONG(0);
  clear_has_session_id();
}
inline ::google::protobuf::uint64 IMGetLatestMsgIdReq::session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdReq.session_id)
  return session_id_;
}
inline void IMGetLatestMsgIdReq::set_session_id(::google::protobuf::uint64 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdReq.session_id)
}

// optional uint64 msg_item = 4;
inline bool IMGetLatestMsgIdReq::has_msg_item() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMGetLatestMsgIdReq::set_has_msg_item() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMGetLatestMsgIdReq::clear_has_msg_item() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMGetLatestMsgIdReq::clear_msg_item() {
  msg_item_ = GOOGLE_ULONGLONG(0);
  clear_has_msg_item();
}
inline ::google::protobuf::uint64 IMGetLatestMsgIdReq::msg_item() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdReq.msg_item)
  return msg_item_;
}
inline void IMGetLatestMsgIdReq::set_msg_item(::google::protobuf::uint64 value) {
  set_has_msg_item();
  msg_item_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdReq.msg_item)
}

// optional bytes attach_data = 20;
inline bool IMGetLatestMsgIdReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMGetLatestMsgIdReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMGetLatestMsgIdReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMGetLatestMsgIdReq::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMGetLatestMsgIdReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdReq.attach_data)
  return *attach_data_;
}
inline void IMGetLatestMsgIdReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdReq.attach_data)
}
inline void IMGetLatestMsgIdReq::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGetLatestMsgIdReq.attach_data)
}
inline void IMGetLatestMsgIdReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGetLatestMsgIdReq.attach_data)
}
inline ::std::string* IMGetLatestMsgIdReq::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetLatestMsgIdReq.attach_data)
  return attach_data_;
}
inline ::std::string* IMGetLatestMsgIdReq::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMGetLatestMsgIdReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetLatestMsgIdReq.attach_data)
}

// optional .IM.BaseDefine.ExtInfo ext_info = 21;
inline bool IMGetLatestMsgIdReq::has_ext_info() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IMGetLatestMsgIdReq::set_has_ext_info() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IMGetLatestMsgIdReq::clear_has_ext_info() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IMGetLatestMsgIdReq::clear_ext_info() {
  if (ext_info_ != NULL) ext_info_->::IM::BaseDefine::ExtInfo::Clear();
  clear_has_ext_info();
}
inline const ::IM::BaseDefine::ExtInfo& IMGetLatestMsgIdReq::ext_info() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdReq.ext_info)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return ext_info_ != NULL ? *ext_info_ : *default_instance().ext_info_;
#else
  return ext_info_ != NULL ? *ext_info_ : *default_instance_->ext_info_;
#endif
}
inline ::IM::BaseDefine::ExtInfo* IMGetLatestMsgIdReq::mutable_ext_info() {
  set_has_ext_info();
  if (ext_info_ == NULL) ext_info_ = new ::IM::BaseDefine::ExtInfo;
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetLatestMsgIdReq.ext_info)
  return ext_info_;
}
inline ::IM::BaseDefine::ExtInfo* IMGetLatestMsgIdReq::release_ext_info() {
  clear_has_ext_info();
  ::IM::BaseDefine::ExtInfo* temp = ext_info_;
  ext_info_ = NULL;
  return temp;
}
inline void IMGetLatestMsgIdReq::set_allocated_ext_info(::IM::BaseDefine::ExtInfo* ext_info) {
  delete ext_info_;
  ext_info_ = ext_info;
  if (ext_info) {
    set_has_ext_info();
  } else {
    clear_has_ext_info();
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetLatestMsgIdReq.ext_info)
}

// optional uint32 domain_id = 22 [default = 1000];
inline bool IMGetLatestMsgIdReq::has_domain_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IMGetLatestMsgIdReq::set_has_domain_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IMGetLatestMsgIdReq::clear_has_domain_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IMGetLatestMsgIdReq::clear_domain_id() {
  domain_id_ = 1000u;
  clear_has_domain_id();
}
inline ::google::protobuf::uint32 IMGetLatestMsgIdReq::domain_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdReq.domain_id)
  return domain_id_;
}
inline void IMGetLatestMsgIdReq::set_domain_id(::google::protobuf::uint32 value) {
  set_has_domain_id();
  domain_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdReq.domain_id)
}

// -------------------------------------------------------------------

// IMGetLatestMsgIdRsp

// required uint64 user_id = 1;
inline bool IMGetLatestMsgIdRsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMGetLatestMsgIdRsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMGetLatestMsgIdRsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMGetLatestMsgIdRsp::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 IMGetLatestMsgIdRsp::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdRsp.user_id)
  return user_id_;
}
inline void IMGetLatestMsgIdRsp::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdRsp.user_id)
}

// required .IM.BaseDefine.SessionType session_type = 2;
inline bool IMGetLatestMsgIdRsp::has_session_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMGetLatestMsgIdRsp::set_has_session_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMGetLatestMsgIdRsp::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMGetLatestMsgIdRsp::clear_session_type() {
  session_type_ = 0;
  clear_has_session_type();
}
inline ::IM::BaseDefine::SessionType IMGetLatestMsgIdRsp::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdRsp.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMGetLatestMsgIdRsp::set_session_type(::IM::BaseDefine::SessionType value) {
  assert(::IM::BaseDefine::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdRsp.session_type)
}

// required uint64 session_id = 3;
inline bool IMGetLatestMsgIdRsp::has_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMGetLatestMsgIdRsp::set_has_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMGetLatestMsgIdRsp::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMGetLatestMsgIdRsp::clear_session_id() {
  session_id_ = GOOGLE_ULONGLONG(0);
  clear_has_session_id();
}
inline ::google::protobuf::uint64 IMGetLatestMsgIdRsp::session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdRsp.session_id)
  return session_id_;
}
inline void IMGetLatestMsgIdRsp::set_session_id(::google::protobuf::uint64 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdRsp.session_id)
}

// required uint32 latest_msg_id = 4;
inline bool IMGetLatestMsgIdRsp::has_latest_msg_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMGetLatestMsgIdRsp::set_has_latest_msg_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMGetLatestMsgIdRsp::clear_has_latest_msg_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMGetLatestMsgIdRsp::clear_latest_msg_id() {
  latest_msg_id_ = 0u;
  clear_has_latest_msg_id();
}
inline ::google::protobuf::uint32 IMGetLatestMsgIdRsp::latest_msg_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdRsp.latest_msg_id)
  return latest_msg_id_;
}
inline void IMGetLatestMsgIdRsp::set_latest_msg_id(::google::protobuf::uint32 value) {
  set_has_latest_msg_id();
  latest_msg_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdRsp.latest_msg_id)
}

// optional uint64 msg_item = 5;
inline bool IMGetLatestMsgIdRsp::has_msg_item() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMGetLatestMsgIdRsp::set_has_msg_item() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMGetLatestMsgIdRsp::clear_has_msg_item() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMGetLatestMsgIdRsp::clear_msg_item() {
  msg_item_ = GOOGLE_ULONGLONG(0);
  clear_has_msg_item();
}
inline ::google::protobuf::uint64 IMGetLatestMsgIdRsp::msg_item() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdRsp.msg_item)
  return msg_item_;
}
inline void IMGetLatestMsgIdRsp::set_msg_item(::google::protobuf::uint64 value) {
  set_has_msg_item();
  msg_item_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdRsp.msg_item)
}

// optional bytes attach_data = 20;
inline bool IMGetLatestMsgIdRsp::has_attach_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IMGetLatestMsgIdRsp::set_has_attach_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IMGetLatestMsgIdRsp::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IMGetLatestMsgIdRsp::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMGetLatestMsgIdRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdRsp.attach_data)
  return *attach_data_;
}
inline void IMGetLatestMsgIdRsp::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdRsp.attach_data)
}
inline void IMGetLatestMsgIdRsp::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGetLatestMsgIdRsp.attach_data)
}
inline void IMGetLatestMsgIdRsp::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGetLatestMsgIdRsp.attach_data)
}
inline ::std::string* IMGetLatestMsgIdRsp::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetLatestMsgIdRsp.attach_data)
  return attach_data_;
}
inline ::std::string* IMGetLatestMsgIdRsp::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMGetLatestMsgIdRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetLatestMsgIdRsp.attach_data)
}

// optional .IM.BaseDefine.ExtInfo ext_info = 21;
inline bool IMGetLatestMsgIdRsp::has_ext_info() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IMGetLatestMsgIdRsp::set_has_ext_info() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IMGetLatestMsgIdRsp::clear_has_ext_info() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IMGetLatestMsgIdRsp::clear_ext_info() {
  if (ext_info_ != NULL) ext_info_->::IM::BaseDefine::ExtInfo::Clear();
  clear_has_ext_info();
}
inline const ::IM::BaseDefine::ExtInfo& IMGetLatestMsgIdRsp::ext_info() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdRsp.ext_info)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return ext_info_ != NULL ? *ext_info_ : *default_instance().ext_info_;
#else
  return ext_info_ != NULL ? *ext_info_ : *default_instance_->ext_info_;
#endif
}
inline ::IM::BaseDefine::ExtInfo* IMGetLatestMsgIdRsp::mutable_ext_info() {
  set_has_ext_info();
  if (ext_info_ == NULL) ext_info_ = new ::IM::BaseDefine::ExtInfo;
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetLatestMsgIdRsp.ext_info)
  return ext_info_;
}
inline ::IM::BaseDefine::ExtInfo* IMGetLatestMsgIdRsp::release_ext_info() {
  clear_has_ext_info();
  ::IM::BaseDefine::ExtInfo* temp = ext_info_;
  ext_info_ = NULL;
  return temp;
}
inline void IMGetLatestMsgIdRsp::set_allocated_ext_info(::IM::BaseDefine::ExtInfo* ext_info) {
  delete ext_info_;
  ext_info_ = ext_info;
  if (ext_info) {
    set_has_ext_info();
  } else {
    clear_has_ext_info();
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetLatestMsgIdRsp.ext_info)
}

// -------------------------------------------------------------------

// IMGetMsgByIdReq

// required uint64 user_id = 1;
inline bool IMGetMsgByIdReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMGetMsgByIdReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMGetMsgByIdReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMGetMsgByIdReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 IMGetMsgByIdReq::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdReq.user_id)
  return user_id_;
}
inline void IMGetMsgByIdReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdReq.user_id)
}

// required .IM.BaseDefine.SessionType session_type = 2;
inline bool IMGetMsgByIdReq::has_session_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMGetMsgByIdReq::set_has_session_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMGetMsgByIdReq::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMGetMsgByIdReq::clear_session_type() {
  session_type_ = 0;
  clear_has_session_type();
}
inline ::IM::BaseDefine::SessionType IMGetMsgByIdReq::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdReq.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMGetMsgByIdReq::set_session_type(::IM::BaseDefine::SessionType value) {
  assert(::IM::BaseDefine::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdReq.session_type)
}

// required uint64 session_id = 3;
inline bool IMGetMsgByIdReq::has_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMGetMsgByIdReq::set_has_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMGetMsgByIdReq::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMGetMsgByIdReq::clear_session_id() {
  session_id_ = GOOGLE_ULONGLONG(0);
  clear_has_session_id();
}
inline ::google::protobuf::uint64 IMGetMsgByIdReq::session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdReq.session_id)
  return session_id_;
}
inline void IMGetMsgByIdReq::set_session_id(::google::protobuf::uint64 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdReq.session_id)
}

// repeated uint32 msg_id_list = 4;
inline int IMGetMsgByIdReq::msg_id_list_size() const {
  return msg_id_list_.size();
}
inline void IMGetMsgByIdReq::clear_msg_id_list() {
  msg_id_list_.Clear();
}
inline ::google::protobuf::uint32 IMGetMsgByIdReq::msg_id_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdReq.msg_id_list)
  return msg_id_list_.Get(index);
}
inline void IMGetMsgByIdReq::set_msg_id_list(int index, ::google::protobuf::uint32 value) {
  msg_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdReq.msg_id_list)
}
inline void IMGetMsgByIdReq::add_msg_id_list(::google::protobuf::uint32 value) {
  msg_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:IM.Message.IMGetMsgByIdReq.msg_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
IMGetMsgByIdReq::msg_id_list() const {
  // @@protoc_insertion_point(field_list:IM.Message.IMGetMsgByIdReq.msg_id_list)
  return msg_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
IMGetMsgByIdReq::mutable_msg_id_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Message.IMGetMsgByIdReq.msg_id_list)
  return &msg_id_list_;
}

// optional uint64 msg_item = 5;
inline bool IMGetMsgByIdReq::has_msg_item() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMGetMsgByIdReq::set_has_msg_item() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMGetMsgByIdReq::clear_has_msg_item() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMGetMsgByIdReq::clear_msg_item() {
  msg_item_ = GOOGLE_ULONGLONG(0);
  clear_has_msg_item();
}
inline ::google::protobuf::uint64 IMGetMsgByIdReq::msg_item() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdReq.msg_item)
  return msg_item_;
}
inline void IMGetMsgByIdReq::set_msg_item(::google::protobuf::uint64 value) {
  set_has_msg_item();
  msg_item_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdReq.msg_item)
}

// optional bytes attach_data = 20;
inline bool IMGetMsgByIdReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IMGetMsgByIdReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IMGetMsgByIdReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IMGetMsgByIdReq::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMGetMsgByIdReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdReq.attach_data)
  return *attach_data_;
}
inline void IMGetMsgByIdReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdReq.attach_data)
}
inline void IMGetMsgByIdReq::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGetMsgByIdReq.attach_data)
}
inline void IMGetMsgByIdReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGetMsgByIdReq.attach_data)
}
inline ::std::string* IMGetMsgByIdReq::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgByIdReq.attach_data)
  return attach_data_;
}
inline ::std::string* IMGetMsgByIdReq::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMGetMsgByIdReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetMsgByIdReq.attach_data)
}

// optional .IM.BaseDefine.ExtInfo ext_info = 21;
inline bool IMGetMsgByIdReq::has_ext_info() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IMGetMsgByIdReq::set_has_ext_info() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IMGetMsgByIdReq::clear_has_ext_info() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IMGetMsgByIdReq::clear_ext_info() {
  if (ext_info_ != NULL) ext_info_->::IM::BaseDefine::ExtInfo::Clear();
  clear_has_ext_info();
}
inline const ::IM::BaseDefine::ExtInfo& IMGetMsgByIdReq::ext_info() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdReq.ext_info)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return ext_info_ != NULL ? *ext_info_ : *default_instance().ext_info_;
#else
  return ext_info_ != NULL ? *ext_info_ : *default_instance_->ext_info_;
#endif
}
inline ::IM::BaseDefine::ExtInfo* IMGetMsgByIdReq::mutable_ext_info() {
  set_has_ext_info();
  if (ext_info_ == NULL) ext_info_ = new ::IM::BaseDefine::ExtInfo;
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgByIdReq.ext_info)
  return ext_info_;
}
inline ::IM::BaseDefine::ExtInfo* IMGetMsgByIdReq::release_ext_info() {
  clear_has_ext_info();
  ::IM::BaseDefine::ExtInfo* temp = ext_info_;
  ext_info_ = NULL;
  return temp;
}
inline void IMGetMsgByIdReq::set_allocated_ext_info(::IM::BaseDefine::ExtInfo* ext_info) {
  delete ext_info_;
  ext_info_ = ext_info;
  if (ext_info) {
    set_has_ext_info();
  } else {
    clear_has_ext_info();
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetMsgByIdReq.ext_info)
}

// optional uint32 domain_id = 22 [default = 1000];
inline bool IMGetMsgByIdReq::has_domain_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IMGetMsgByIdReq::set_has_domain_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IMGetMsgByIdReq::clear_has_domain_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IMGetMsgByIdReq::clear_domain_id() {
  domain_id_ = 1000u;
  clear_has_domain_id();
}
inline ::google::protobuf::uint32 IMGetMsgByIdReq::domain_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdReq.domain_id)
  return domain_id_;
}
inline void IMGetMsgByIdReq::set_domain_id(::google::protobuf::uint32 value) {
  set_has_domain_id();
  domain_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdReq.domain_id)
}

// -------------------------------------------------------------------

// IMGetMsgByIdRsp

// required uint64 user_id = 1;
inline bool IMGetMsgByIdRsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMGetMsgByIdRsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMGetMsgByIdRsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMGetMsgByIdRsp::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 IMGetMsgByIdRsp::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdRsp.user_id)
  return user_id_;
}
inline void IMGetMsgByIdRsp::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdRsp.user_id)
}

// required .IM.BaseDefine.SessionType session_type = 2;
inline bool IMGetMsgByIdRsp::has_session_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMGetMsgByIdRsp::set_has_session_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMGetMsgByIdRsp::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMGetMsgByIdRsp::clear_session_type() {
  session_type_ = 0;
  clear_has_session_type();
}
inline ::IM::BaseDefine::SessionType IMGetMsgByIdRsp::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdRsp.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMGetMsgByIdRsp::set_session_type(::IM::BaseDefine::SessionType value) {
  assert(::IM::BaseDefine::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdRsp.session_type)
}

// required uint64 session_id = 3;
inline bool IMGetMsgByIdRsp::has_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMGetMsgByIdRsp::set_has_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMGetMsgByIdRsp::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMGetMsgByIdRsp::clear_session_id() {
  session_id_ = GOOGLE_ULONGLONG(0);
  clear_has_session_id();
}
inline ::google::protobuf::uint64 IMGetMsgByIdRsp::session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdRsp.session_id)
  return session_id_;
}
inline void IMGetMsgByIdRsp::set_session_id(::google::protobuf::uint64 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdRsp.session_id)
}

// repeated .IM.BaseDefine.MsgInfo msg_list = 4;
inline int IMGetMsgByIdRsp::msg_list_size() const {
  return msg_list_.size();
}
inline void IMGetMsgByIdRsp::clear_msg_list() {
  msg_list_.Clear();
}
inline const ::IM::BaseDefine::MsgInfo& IMGetMsgByIdRsp::msg_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdRsp.msg_list)
  return msg_list_.Get(index);
}
inline ::IM::BaseDefine::MsgInfo* IMGetMsgByIdRsp::mutable_msg_list(int index) {
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgByIdRsp.msg_list)
  return msg_list_.Mutable(index);
}
inline ::IM::BaseDefine::MsgInfo* IMGetMsgByIdRsp::add_msg_list() {
  // @@protoc_insertion_point(field_add:IM.Message.IMGetMsgByIdRsp.msg_list)
  return msg_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgInfo >&
IMGetMsgByIdRsp::msg_list() const {
  // @@protoc_insertion_point(field_list:IM.Message.IMGetMsgByIdRsp.msg_list)
  return msg_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgInfo >*
IMGetMsgByIdRsp::mutable_msg_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Message.IMGetMsgByIdRsp.msg_list)
  return &msg_list_;
}

// optional uint64 msg_item = 5;
inline bool IMGetMsgByIdRsp::has_msg_item() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMGetMsgByIdRsp::set_has_msg_item() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMGetMsgByIdRsp::clear_has_msg_item() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMGetMsgByIdRsp::clear_msg_item() {
  msg_item_ = GOOGLE_ULONGLONG(0);
  clear_has_msg_item();
}
inline ::google::protobuf::uint64 IMGetMsgByIdRsp::msg_item() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdRsp.msg_item)
  return msg_item_;
}
inline void IMGetMsgByIdRsp::set_msg_item(::google::protobuf::uint64 value) {
  set_has_msg_item();
  msg_item_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdRsp.msg_item)
}

// optional bytes attach_data = 20;
inline bool IMGetMsgByIdRsp::has_attach_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IMGetMsgByIdRsp::set_has_attach_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IMGetMsgByIdRsp::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IMGetMsgByIdRsp::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMGetMsgByIdRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdRsp.attach_data)
  return *attach_data_;
}
inline void IMGetMsgByIdRsp::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdRsp.attach_data)
}
inline void IMGetMsgByIdRsp::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGetMsgByIdRsp.attach_data)
}
inline void IMGetMsgByIdRsp::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGetMsgByIdRsp.attach_data)
}
inline ::std::string* IMGetMsgByIdRsp::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgByIdRsp.attach_data)
  return attach_data_;
}
inline ::std::string* IMGetMsgByIdRsp::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMGetMsgByIdRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetMsgByIdRsp.attach_data)
}

// optional .IM.BaseDefine.ExtInfo ext_info = 21;
inline bool IMGetMsgByIdRsp::has_ext_info() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IMGetMsgByIdRsp::set_has_ext_info() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IMGetMsgByIdRsp::clear_has_ext_info() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IMGetMsgByIdRsp::clear_ext_info() {
  if (ext_info_ != NULL) ext_info_->::IM::BaseDefine::ExtInfo::Clear();
  clear_has_ext_info();
}
inline const ::IM::BaseDefine::ExtInfo& IMGetMsgByIdRsp::ext_info() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdRsp.ext_info)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return ext_info_ != NULL ? *ext_info_ : *default_instance().ext_info_;
#else
  return ext_info_ != NULL ? *ext_info_ : *default_instance_->ext_info_;
#endif
}
inline ::IM::BaseDefine::ExtInfo* IMGetMsgByIdRsp::mutable_ext_info() {
  set_has_ext_info();
  if (ext_info_ == NULL) ext_info_ = new ::IM::BaseDefine::ExtInfo;
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgByIdRsp.ext_info)
  return ext_info_;
}
inline ::IM::BaseDefine::ExtInfo* IMGetMsgByIdRsp::release_ext_info() {
  clear_has_ext_info();
  ::IM::BaseDefine::ExtInfo* temp = ext_info_;
  ext_info_ = NULL;
  return temp;
}
inline void IMGetMsgByIdRsp::set_allocated_ext_info(::IM::BaseDefine::ExtInfo* ext_info) {
  delete ext_info_;
  ext_info_ = ext_info;
  if (ext_info) {
    set_has_ext_info();
  } else {
    clear_has_ext_info();
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetMsgByIdRsp.ext_info)
}

// -------------------------------------------------------------------

// IMGeekCtlInner

// required bytes user_data = 1;
inline bool IMGeekCtlInner::has_user_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMGeekCtlInner::set_has_user_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMGeekCtlInner::clear_has_user_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMGeekCtlInner::clear_user_data() {
  if (user_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_->clear();
  }
  clear_has_user_data();
}
inline const ::std::string& IMGeekCtlInner::user_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGeekCtlInner.user_data)
  return *user_data_;
}
inline void IMGeekCtlInner::set_user_data(const ::std::string& value) {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  user_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGeekCtlInner.user_data)
}
inline void IMGeekCtlInner::set_user_data(const char* value) {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  user_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGeekCtlInner.user_data)
}
inline void IMGeekCtlInner::set_user_data(const void* value, size_t size) {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  user_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGeekCtlInner.user_data)
}
inline ::std::string* IMGeekCtlInner::mutable_user_data() {
  set_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGeekCtlInner.user_data)
  return user_data_;
}
inline ::std::string* IMGeekCtlInner::release_user_data() {
  clear_has_user_data();
  if (user_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_data_;
    user_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMGeekCtlInner::set_allocated_user_data(::std::string* user_data) {
  if (user_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_data_;
  }
  if (user_data) {
    set_has_user_data();
    user_data_ = user_data;
  } else {
    clear_has_user_data();
    user_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGeekCtlInner.user_data)
}

// required bytes msg_data = 2;
inline bool IMGeekCtlInner::has_msg_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMGeekCtlInner::set_has_msg_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMGeekCtlInner::clear_has_msg_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMGeekCtlInner::clear_msg_data() {
  if (msg_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_->clear();
  }
  clear_has_msg_data();
}
inline const ::std::string& IMGeekCtlInner::msg_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGeekCtlInner.msg_data)
  return *msg_data_;
}
inline void IMGeekCtlInner::set_msg_data(const ::std::string& value) {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_ = new ::std::string;
  }
  msg_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGeekCtlInner.msg_data)
}
inline void IMGeekCtlInner::set_msg_data(const char* value) {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_ = new ::std::string;
  }
  msg_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGeekCtlInner.msg_data)
}
inline void IMGeekCtlInner::set_msg_data(const void* value, size_t size) {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_ = new ::std::string;
  }
  msg_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGeekCtlInner.msg_data)
}
inline ::std::string* IMGeekCtlInner::mutable_msg_data() {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGeekCtlInner.msg_data)
  return msg_data_;
}
inline ::std::string* IMGeekCtlInner::release_msg_data() {
  clear_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_data_;
    msg_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMGeekCtlInner::set_allocated_msg_data(::std::string* msg_data) {
  if (msg_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_data_;
  }
  if (msg_data) {
    set_has_msg_data();
    msg_data_ = msg_data;
  } else {
    clear_has_msg_data();
    msg_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGeekCtlInner.msg_data)
}

// optional bytes attach_data = 20;
inline bool IMGeekCtlInner::has_attach_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMGeekCtlInner::set_has_attach_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMGeekCtlInner::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMGeekCtlInner::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMGeekCtlInner::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGeekCtlInner.attach_data)
  return *attach_data_;
}
inline void IMGeekCtlInner::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGeekCtlInner.attach_data)
}
inline void IMGeekCtlInner::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGeekCtlInner.attach_data)
}
inline void IMGeekCtlInner::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGeekCtlInner.attach_data)
}
inline ::std::string* IMGeekCtlInner::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGeekCtlInner.attach_data)
  return attach_data_;
}
inline ::std::string* IMGeekCtlInner::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMGeekCtlInner::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGeekCtlInner.attach_data)
}

// -------------------------------------------------------------------

// IMGeekControl

// required uint64 user_id = 1;
inline bool IMGeekControl::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMGeekControl::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMGeekControl::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMGeekControl::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 IMGeekControl::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGeekControl.user_id)
  return user_id_;
}
inline void IMGeekControl::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGeekControl.user_id)
}

// required bytes msg_data = 2;
inline bool IMGeekControl::has_msg_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMGeekControl::set_has_msg_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMGeekControl::clear_has_msg_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMGeekControl::clear_msg_data() {
  if (msg_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_->clear();
  }
  clear_has_msg_data();
}
inline const ::std::string& IMGeekControl::msg_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGeekControl.msg_data)
  return *msg_data_;
}
inline void IMGeekControl::set_msg_data(const ::std::string& value) {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_ = new ::std::string;
  }
  msg_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGeekControl.msg_data)
}
inline void IMGeekControl::set_msg_data(const char* value) {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_ = new ::std::string;
  }
  msg_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGeekControl.msg_data)
}
inline void IMGeekControl::set_msg_data(const void* value, size_t size) {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_ = new ::std::string;
  }
  msg_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGeekControl.msg_data)
}
inline ::std::string* IMGeekControl::mutable_msg_data() {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGeekControl.msg_data)
  return msg_data_;
}
inline ::std::string* IMGeekControl::release_msg_data() {
  clear_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_data_;
    msg_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMGeekControl::set_allocated_msg_data(::std::string* msg_data) {
  if (msg_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_data_;
  }
  if (msg_data) {
    set_has_msg_data();
    msg_data_ = msg_data;
  } else {
    clear_has_msg_data();
    msg_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGeekControl.msg_data)
}

// optional bytes attach_data = 20;
inline bool IMGeekControl::has_attach_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMGeekControl::set_has_attach_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMGeekControl::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMGeekControl::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMGeekControl::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGeekControl.attach_data)
  return *attach_data_;
}
inline void IMGeekControl::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGeekControl.attach_data)
}
inline void IMGeekControl::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGeekControl.attach_data)
}
inline void IMGeekControl::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGeekControl.attach_data)
}
inline ::std::string* IMGeekControl::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGeekControl.attach_data)
  return attach_data_;
}
inline ::std::string* IMGeekControl::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMGeekControl::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGeekControl.attach_data)
}

// -------------------------------------------------------------------

// IMMsgDataPushNotify

// required uint64 from_user_id = 1;
inline bool IMMsgDataPushNotify::has_from_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMMsgDataPushNotify::set_has_from_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMMsgDataPushNotify::clear_has_from_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMMsgDataPushNotify::clear_from_user_id() {
  from_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_from_user_id();
}
inline ::google::protobuf::uint64 IMMsgDataPushNotify::from_user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataPushNotify.from_user_id)
  return from_user_id_;
}
inline void IMMsgDataPushNotify::set_from_user_id(::google::protobuf::uint64 value) {
  set_has_from_user_id();
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataPushNotify.from_user_id)
}

// required uint64 to_session_id = 2;
inline bool IMMsgDataPushNotify::has_to_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMMsgDataPushNotify::set_has_to_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMMsgDataPushNotify::clear_has_to_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMMsgDataPushNotify::clear_to_session_id() {
  to_session_id_ = GOOGLE_ULONGLONG(0);
  clear_has_to_session_id();
}
inline ::google::protobuf::uint64 IMMsgDataPushNotify::to_session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataPushNotify.to_session_id)
  return to_session_id_;
}
inline void IMMsgDataPushNotify::set_to_session_id(::google::protobuf::uint64 value) {
  set_has_to_session_id();
  to_session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataPushNotify.to_session_id)
}

// required uint32 create_time = 3;
inline bool IMMsgDataPushNotify::has_create_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMMsgDataPushNotify::set_has_create_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMMsgDataPushNotify::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMMsgDataPushNotify::clear_create_time() {
  create_time_ = 0u;
  clear_has_create_time();
}
inline ::google::protobuf::uint32 IMMsgDataPushNotify::create_time() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataPushNotify.create_time)
  return create_time_;
}
inline void IMMsgDataPushNotify::set_create_time(::google::protobuf::uint32 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataPushNotify.create_time)
}

// required string msg_type = 4;
inline bool IMMsgDataPushNotify::has_msg_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMMsgDataPushNotify::set_has_msg_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMMsgDataPushNotify::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMMsgDataPushNotify::clear_msg_type() {
  if (msg_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_type_->clear();
  }
  clear_has_msg_type();
}
inline const ::std::string& IMMsgDataPushNotify::msg_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataPushNotify.msg_type)
  return *msg_type_;
}
inline void IMMsgDataPushNotify::set_msg_type(const ::std::string& value) {
  set_has_msg_type();
  if (msg_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_type_ = new ::std::string;
  }
  msg_type_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataPushNotify.msg_type)
}
inline void IMMsgDataPushNotify::set_msg_type(const char* value) {
  set_has_msg_type();
  if (msg_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_type_ = new ::std::string;
  }
  msg_type_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMMsgDataPushNotify.msg_type)
}
inline void IMMsgDataPushNotify::set_msg_type(const char* value, size_t size) {
  set_has_msg_type();
  if (msg_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_type_ = new ::std::string;
  }
  msg_type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMMsgDataPushNotify.msg_type)
}
inline ::std::string* IMMsgDataPushNotify::mutable_msg_type() {
  set_has_msg_type();
  if (msg_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgDataPushNotify.msg_type)
  return msg_type_;
}
inline ::std::string* IMMsgDataPushNotify::release_msg_type() {
  clear_has_msg_type();
  if (msg_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_type_;
    msg_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMMsgDataPushNotify::set_allocated_msg_type(::std::string* msg_type) {
  if (msg_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_type_;
  }
  if (msg_type) {
    set_has_msg_type();
    msg_type_ = msg_type;
  } else {
    clear_has_msg_type();
    msg_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsgDataPushNotify.msg_type)
}

// required string msg_content = 5;
inline bool IMMsgDataPushNotify::has_msg_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMMsgDataPushNotify::set_has_msg_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMMsgDataPushNotify::clear_has_msg_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMMsgDataPushNotify::clear_msg_content() {
  if (msg_content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_->clear();
  }
  clear_has_msg_content();
}
inline const ::std::string& IMMsgDataPushNotify::msg_content() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataPushNotify.msg_content)
  return *msg_content_;
}
inline void IMMsgDataPushNotify::set_msg_content(const ::std::string& value) {
  set_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_ = new ::std::string;
  }
  msg_content_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataPushNotify.msg_content)
}
inline void IMMsgDataPushNotify::set_msg_content(const char* value) {
  set_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_ = new ::std::string;
  }
  msg_content_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMMsgDataPushNotify.msg_content)
}
inline void IMMsgDataPushNotify::set_msg_content(const char* value, size_t size) {
  set_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_ = new ::std::string;
  }
  msg_content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMMsgDataPushNotify.msg_content)
}
inline ::std::string* IMMsgDataPushNotify::mutable_msg_content() {
  set_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgDataPushNotify.msg_content)
  return msg_content_;
}
inline ::std::string* IMMsgDataPushNotify::release_msg_content() {
  clear_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_content_;
    msg_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMMsgDataPushNotify::set_allocated_msg_content(::std::string* msg_content) {
  if (msg_content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_content_;
  }
  if (msg_content) {
    set_has_msg_content();
    msg_content_ = msg_content;
  } else {
    clear_has_msg_content();
    msg_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsgDataPushNotify.msg_content)
}

// -------------------------------------------------------------------

// IMMsgDataPushNotifyInner

// required uint64 from_user_id = 1;
inline bool IMMsgDataPushNotifyInner::has_from_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMMsgDataPushNotifyInner::set_has_from_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMMsgDataPushNotifyInner::clear_has_from_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMMsgDataPushNotifyInner::clear_from_user_id() {
  from_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_from_user_id();
}
inline ::google::protobuf::uint64 IMMsgDataPushNotifyInner::from_user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataPushNotifyInner.from_user_id)
  return from_user_id_;
}
inline void IMMsgDataPushNotifyInner::set_from_user_id(::google::protobuf::uint64 value) {
  set_has_from_user_id();
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataPushNotifyInner.from_user_id)
}

// repeated uint64 to_session_id = 2;
inline int IMMsgDataPushNotifyInner::to_session_id_size() const {
  return to_session_id_.size();
}
inline void IMMsgDataPushNotifyInner::clear_to_session_id() {
  to_session_id_.Clear();
}
inline ::google::protobuf::uint64 IMMsgDataPushNotifyInner::to_session_id(int index) const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataPushNotifyInner.to_session_id)
  return to_session_id_.Get(index);
}
inline void IMMsgDataPushNotifyInner::set_to_session_id(int index, ::google::protobuf::uint64 value) {
  to_session_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataPushNotifyInner.to_session_id)
}
inline void IMMsgDataPushNotifyInner::add_to_session_id(::google::protobuf::uint64 value) {
  to_session_id_.Add(value);
  // @@protoc_insertion_point(field_add:IM.Message.IMMsgDataPushNotifyInner.to_session_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
IMMsgDataPushNotifyInner::to_session_id() const {
  // @@protoc_insertion_point(field_list:IM.Message.IMMsgDataPushNotifyInner.to_session_id)
  return to_session_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
IMMsgDataPushNotifyInner::mutable_to_session_id() {
  // @@protoc_insertion_point(field_mutable_list:IM.Message.IMMsgDataPushNotifyInner.to_session_id)
  return &to_session_id_;
}

// required uint32 send_type = 3;
inline bool IMMsgDataPushNotifyInner::has_send_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMMsgDataPushNotifyInner::set_has_send_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMMsgDataPushNotifyInner::clear_has_send_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMMsgDataPushNotifyInner::clear_send_type() {
  send_type_ = 0u;
  clear_has_send_type();
}
inline ::google::protobuf::uint32 IMMsgDataPushNotifyInner::send_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataPushNotifyInner.send_type)
  return send_type_;
}
inline void IMMsgDataPushNotifyInner::set_send_type(::google::protobuf::uint32 value) {
  set_has_send_type();
  send_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataPushNotifyInner.send_type)
}

// required string msg_type = 4;
inline bool IMMsgDataPushNotifyInner::has_msg_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMMsgDataPushNotifyInner::set_has_msg_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMMsgDataPushNotifyInner::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMMsgDataPushNotifyInner::clear_msg_type() {
  if (msg_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_type_->clear();
  }
  clear_has_msg_type();
}
inline const ::std::string& IMMsgDataPushNotifyInner::msg_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataPushNotifyInner.msg_type)
  return *msg_type_;
}
inline void IMMsgDataPushNotifyInner::set_msg_type(const ::std::string& value) {
  set_has_msg_type();
  if (msg_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_type_ = new ::std::string;
  }
  msg_type_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataPushNotifyInner.msg_type)
}
inline void IMMsgDataPushNotifyInner::set_msg_type(const char* value) {
  set_has_msg_type();
  if (msg_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_type_ = new ::std::string;
  }
  msg_type_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMMsgDataPushNotifyInner.msg_type)
}
inline void IMMsgDataPushNotifyInner::set_msg_type(const char* value, size_t size) {
  set_has_msg_type();
  if (msg_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_type_ = new ::std::string;
  }
  msg_type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMMsgDataPushNotifyInner.msg_type)
}
inline ::std::string* IMMsgDataPushNotifyInner::mutable_msg_type() {
  set_has_msg_type();
  if (msg_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgDataPushNotifyInner.msg_type)
  return msg_type_;
}
inline ::std::string* IMMsgDataPushNotifyInner::release_msg_type() {
  clear_has_msg_type();
  if (msg_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_type_;
    msg_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMMsgDataPushNotifyInner::set_allocated_msg_type(::std::string* msg_type) {
  if (msg_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_type_;
  }
  if (msg_type) {
    set_has_msg_type();
    msg_type_ = msg_type;
  } else {
    clear_has_msg_type();
    msg_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsgDataPushNotifyInner.msg_type)
}

// required string msg_content = 5;
inline bool IMMsgDataPushNotifyInner::has_msg_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMMsgDataPushNotifyInner::set_has_msg_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMMsgDataPushNotifyInner::clear_has_msg_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMMsgDataPushNotifyInner::clear_msg_content() {
  if (msg_content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_->clear();
  }
  clear_has_msg_content();
}
inline const ::std::string& IMMsgDataPushNotifyInner::msg_content() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataPushNotifyInner.msg_content)
  return *msg_content_;
}
inline void IMMsgDataPushNotifyInner::set_msg_content(const ::std::string& value) {
  set_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_ = new ::std::string;
  }
  msg_content_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataPushNotifyInner.msg_content)
}
inline void IMMsgDataPushNotifyInner::set_msg_content(const char* value) {
  set_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_ = new ::std::string;
  }
  msg_content_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMMsgDataPushNotifyInner.msg_content)
}
inline void IMMsgDataPushNotifyInner::set_msg_content(const char* value, size_t size) {
  set_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_ = new ::std::string;
  }
  msg_content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMMsgDataPushNotifyInner.msg_content)
}
inline ::std::string* IMMsgDataPushNotifyInner::mutable_msg_content() {
  set_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgDataPushNotifyInner.msg_content)
  return msg_content_;
}
inline ::std::string* IMMsgDataPushNotifyInner::release_msg_content() {
  clear_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_content_;
    msg_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMMsgDataPushNotifyInner::set_allocated_msg_content(::std::string* msg_content) {
  if (msg_content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_content_;
  }
  if (msg_content) {
    set_has_msg_content();
    msg_content_ = msg_content;
  } else {
    clear_has_msg_content();
    msg_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsgDataPushNotifyInner.msg_content)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message
}  // namespace IM

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_IM_2eMessage_2eproto__INCLUDED
